{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "69c3acc0-fb8a-4da5-9931-fbf8eb827d2d",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [],
              "includeAll": true,
              "showDefault": false
            },
            "value": null
          },
          {
            "id": "acc955f1-5a5c-4be7-a100-d487a6c07008",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "label": "Log Analytics Workspace",
            "type": 5,
            "isRequired": true,
            "query": "resources\r\n| where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project value = id, label = name",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "fe2689c4-5959-4025-9e31-f2187d807a71",
            "version": "KqlParameterItem/1.0",
            "name": "ConfigMgrResourceGroup",
            "label": "ConfigMgr Resource Group",
            "type": 2,
            "isRequired": true,
            "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions/resourcegroups\"",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "1eac0e70-80c5-4a2e-bcb2-e0ac529abd9d",
            "version": "KqlParameterItem/1.0",
            "name": "CMGResourceGroup",
            "label": "CMG Resource Group",
            "type": 2,
            "isRequired": true,
            "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions/resourcegroups\"",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "874ef4c8-e185-4e66-a1c4-856011745300",
            "version": "KqlParameterItem/1.0",
            "name": "StorageAccount",
            "label": "Storage Account",
            "type": 5,
            "isRequired": true,
            "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "e389ec30-0998-414f-a7c0-6d5f1556d1fb",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ]
            },
            "value": {
              "durationMs": 86400000
            }
          },
          {
            "id": "64a2af08-f2d1-444a-9d3b-c9ffe103ed84",
            "version": "KqlParameterItem/1.0",
            "name": "WindowsVMCount",
            "type": 1,
            "query": "//Virtual Machines\r\nresources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend PowerStatus = tostring(properties.extended.instanceView.powerState.displayStatus),\r\n\tOSType = tostring(properties.storageProfile.osDisk.osType),\r\n    IdentityType = identity.type,\r\n    ComputerName = tolower(name)\r\n| extend ResourceType=\"Virtual Machine\"\r\n| extend patchSettings = iff(properties.storageProfile.osDisk.osType =~ \"windows\", properties.osProfile.windowsConfiguration.patchSettings, properties.osProfile.linuxConfiguration.patchSettings)\r\n| extend patchMode = patchSettings.patchMode\r\n| extend patchMode = case(patchMode =~ 'AutomaticByOS', 'Windows Automatic Updates', patchMode =~ 'ImageDefault', 'Image default', (patchMode =~ 'AutomaticByPlatform' and patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule == true), 'Customer Managed Schedules', patchMode =~ 'AutomaticByPlatform', 'Azure Managed - Safe Deployment', patchMode)\r\n| extend patchMode=tostring(patchMode)\r\n| extend assessmentMode = tostring(patchSettings.assessmentMode)\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType, IdentityType,ResourceType,patchMode,assessmentMode\r\n| union\r\n(\r\n//VM Scale Sets\r\nresources\r\n| where type == \"microsoft.compute/virtualmachinescalesets\"\r\n| extend ResourceType=\"VM Scale Set\"\r\n| extend PowerStatus = tostring(properties.extended.instanceView.powerState.displayStatus),\r\n    OSType = tostring(properties.virtualMachineProfile.storageProfile.osDisk.osType),\r\n    IdentityType = identity.type,\r\n    ComputerName = tolower(name)\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType, IdentityType,ResourceType\r\n)\r\n| union\r\n(\r\n//Azure Arc machines\r\nresources\r\n| where type == \"microsoft.hybridcompute/machines\"\r\n| extend PowerStatus = tostring(properties.status),\r\n\tOSType = tostring(properties.osType),\r\n    IdentityType = identity.type,\r\n    ComputerName = tolower(name)\r\n| extend ResourceType=\"Azure Arc Machine\"\r\n| extend patchSettings = properties.osProfile.windowsConfiguration.patchSettings\r\n| extend assessmentMode = tostring(patchSettings.assessmentMode)\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType, IdentityType,ResourceType,assessmentMode\r\n    )\r\n| extend OSType = case(OSType=~\"windows\",\"Windows\",(case(OSType=~\"linux\",\"Linux\",OSType)))\r\n| extend ResourceType_OS=strcat(OSType,\" \",ResourceType)\r\n//////////// EXCLUDE LIST ////////////\r\n| where ComputerName !contains \"test\" and ComputerName !contains \"EXCLUDED_COMPUTER_1\"\r\n//scope to specific resource groups\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| summarize Count=count() by ResourceType_OS\r\n| where ResourceType_OS == \"Windows Virtual Machine\"\r\n| project Count",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "ebd64b94-2e80-439e-885f-7dfd4470def8",
            "version": "KqlParameterItem/1.0",
            "name": "WindowsVMSSCount",
            "type": 1,
            "query": "//VM Scale Sets\r\nresources\r\n| where type == \"microsoft.compute/virtualmachinescalesets\"\r\n| extend ResourceType=\"VM Scale Set\"\r\n| extend PowerStatus = tostring(properties.extended.instanceView.powerState.displayStatus),\r\n    OSType = tostring(properties.virtualMachineProfile.storageProfile.osDisk.osType),\r\n    IdentityType = identity.type,\r\n    ComputerName = tolower(name),\r\n    Capacity = toint(sku.capacity)\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType, IdentityType,ResourceType,Capacity\r\n//scope to specific resource groups\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| summarize Count=sum(Capacity)",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 4"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "f5f6f06e-0db8-4e54-8aa2-60221c486874",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Health State",
            "subTarget": "HealthState",
            "style": "link"
          },
          {
            "id": "10ef3957-7814-402f-81df-45d4aa754427",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Virtual Machines",
            "subTarget": "VirtualMachines",
            "style": "link"
          },
          {
            "id": "c189268f-dc5b-4cf2-8363-4cd73e63e71d",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Cloud Management Gateway",
            "subTarget": "CMG",
            "style": "link"
          },
          {
            "id": "493a5949-749f-4a14-8553-02dd84a230d5",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "CMG Connection Point",
            "subTarget": "CMGConnectionPoint",
            "style": "link"
          },
          {
            "id": "36cc61fd-b707-4990-997c-124e946f13ca",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Management Point",
            "subTarget": "ManagementPoint",
            "style": "link"
          },
          {
            "id": "b12a2187-8cd7-4eec-8931-c8b1edf5c063",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Storage Account",
            "subTarget": "StorageAccount",
            "style": "link"
          },
          {
            "id": "c159e1f8-4c26-49ca-994f-1a1dac804239",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "ConfigMgr Logs",
            "subTarget": "ConfigMgrLogs",
            "style": "link"
          },
          {
            "id": "6980c07c-c258-4574-a382-dca1a0b68e8a",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "IIS Logs",
            "subTarget": "IISLogs",
            "style": "link"
          },
          {
            "id": "b9a420fd-8a4a-44a7-95f0-4bf13abb0561",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Activity Logs",
            "subTarget": "RecentActivity",
            "style": "link"
          }
        ]
      },
      "name": "links - 4"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//VM Status Health\r\n//AMA Heartbeat\r\nHeartbeat\r\n| where ResourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or ResourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| where _ResourceId !contains \"test\"\r\n| extend ResourceType=tolower(ResourceType)\r\n| extend ResourceId = tolower(ResourceId)\r\n| where ResourceType in (\"virtualmachines\",\"virtualmachinescalesets\",\"machines\")\r\n| where Category == \"Azure Monitor Agent\"\r\n| extend Computer = toupper(Computer) \r\n| extend Computer=tostring(split(Computer,\".\")[0])\r\n| summarize LastAMAHeartbeat = arg_max(TimeGenerated,*) by ResourceId\r\n| extend TimeFromNow = now() - LastAMAHeartbeat\r\n| extend AMAHeartbeat = toint(TimeFromNow / 1s)\r\n| project Computer,OSType,ResourceId,ResourceType,ResourceGroup,SubscriptionId, LastAMAHeartbeat,TimeFromNow,AMAHeartbeat\r\n//Put it all together\r\n| extend ResourceGroup=tolower(ResourceGroup)\r\n| project ResourceId,AMAHeartbeat\r\n| extend Health = iff(AMAHeartbeat > 300,1,0)\r\n| summarize Component = \"Virtual Machines\", SubComponent = \"Monitoring\", Health = max(Health)\r\n| union (\r\n//VM Performance Health\r\n//AMA Heartbeat\r\nHeartbeat\r\n| where ResourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or ResourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| where _ResourceId !contains \"test\"\r\n| extend ResourceType=tolower(ResourceType)\r\n| extend ResourceId = tolower(ResourceId)\r\n| where ResourceType in (\"virtualmachines\",\"virtualmachinescalesets\",\"machines\")\r\n| where Category == \"Azure Monitor Agent\"\r\n| extend Computer = toupper(Computer) \r\n| extend Computer=tostring(split(Computer,\".\")[0])\r\n| summarize LastAMAHeartbeat = arg_max(TimeGenerated,*) by ResourceId\r\n| extend TimeFromNow = now() - LastAMAHeartbeat\r\n| extend AMAHeartbeat = toint(TimeFromNow / 1s)\r\n| project Computer,OSType,ResourceId,ResourceType,ResourceGroup,SubscriptionId, LastAMAHeartbeat,TimeFromNow,AMAHeartbeat\r\n//CPU\r\n| join kind=leftouter\r\n(\r\nInsightsMetrics\r\n| where TimeGenerated > ago(10m)\r\n| where Namespace == \"Processor\" and Name == \"UtilizationPercentage\"\r\n| extend ResourceId = tolower(_ResourceId)\r\n| summarize AvgCPU = round(avg(Val),0) by ResourceId,Computer\r\n| project Computer,AvgCPU,ResourceId\r\n) on ResourceId\r\n//Used Memory\r\n| join kind=leftouter\r\n(\r\nInsightsMetrics\r\n| where TimeGenerated >ago(10m)\r\n| where Namespace == \"Memory\" and Name == \"AvailableMB\"\r\n| extend ResourceId = tolower(_ResourceId)\r\n| extend AvailableMemory=toreal(Val)\r\n| extend TotalMemory = toreal(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"])\r\n| extend AvailableMemoryPercentage = (AvailableMemory / TotalMemory) * 100.0\r\n| extend UsedMemory = (TotalMemory-AvailableMemory)\r\n| extend UsedMemoryPercentage = (UsedMemory / TotalMemory) * 100\r\n| summarize UsedMemoryPercentage=avg(UsedMemoryPercentage) by Computer,ResourceId\r\n| extend UsedMemoryPercentage=toint(round(UsedMemoryPercentage))\r\n) on ResourceId\r\n//Disk Space\r\n| join kind=leftouter\r\n(\r\nInsightsMetrics\r\n| where TimeGenerated > ago(10m)\r\n| where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" and Tags contains \"C:\"\r\n| summarize arg_max(TimeGenerated,*) by _ResourceId\r\n| extend PercentUsedSpace_C = round(100-Val,0)\r\n| extend ResourceId = tolower(_ResourceId)\r\n| project Computer,PercentUsedSpace_C,ResourceId\r\n) on ResourceId\r\n//Put it all together\r\n| extend ResourceGroup=tolower(ResourceGroup)\r\n| project ResourceId,AMAHeartbeat,AvgCPU,UsedMemoryPercentage,PercentUsedSpace_C\r\n| extend Health = iff(AvgCPU > 95 or UsedMemoryPercentage > 95 or PercentUsedSpace_C > 95,1,0)\r\n| summarize Component = \"Virtual Machines\", SubComponent = \"Performance\", Health = max(Health)\r\n)\r\n| union (\r\nHeartbeat\r\n| where ResourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or ResourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| where _ResourceId !contains \"test\"\r\n| extend ResourceId = tolower(ResourceId)\r\n| where Category == \"Azure Monitor Agent\"\r\n| distinct _ResourceId\r\n| join kind=leftouter\r\n(\r\nConfigurationData\r\n| where Computer !contains \"test\"\r\n| where ConfigDataType == \"WindowsServices\"\r\n| where SvcDisplayName in\r\n(\r\n//MECM Services\r\n\"SMS Agent Host\",\r\n\"SMS_EXECUTIVE\",\r\n\"SMS_SITE_COMPONENT_MANAGER\",\r\n\"SMS_SITE_VSS_WRITER\",\r\n\"SQL Server VSS Writer\",\r\n\"Windows Management Instrumentation\",\r\n\"World Wide Web Publishing Service\",\r\n\"WSUS Service\"\r\n) or SvcDisplayName contains \"SMS_SITE_SQL_BACKUP\"\r\n| summarize arg_max(TimeGenerated,*) by Computer, _ResourceId,SvcDisplayName\r\n| project TimeGenerated, Computer,SvcDisplayName,SvcName,SvcAccount,SvcStartupType,SvcState,_ResourceId\r\n| extend Health = iff(SvcState != \"Running\",1,0)\r\n) on _ResourceId\r\n| summarize Component = \"Virtual Machines\", SubComponent = \"Services\", Health = max(Health)\r\n)\r\n| summarize Health = max(Health) by Component,SubComponent\r\n| project SubComponent,Health",
                    "size": 3,
                    "title": "Virtual Machines",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Health",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "0",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "11.5714ch"
                          }
                        },
                        {
                          "columnMatch": "SubComponent",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "32.4286ch"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SubComponent",
                          "label": "Component"
                        },
                        {
                          "columnId": "Health",
                          "label": "Health"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "customWidth": "50",
                  "name": "query - 4 - Copy - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//CMG VM Scale Set Health\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"CloudMgr.log\"\r\n| where RawData contains \"VMSS\" and RawData contains \"vmPowerState\"\r\n| extend VMSSName = extract(\"VMSS (.*?) instance\", 1, RawData)\r\n| extend VMSSInstance = extract(\"<name type=\\\"string\\\">(.*?)</name>\", 1, RawData)\r\n| extend PowerState = extract(\"vmPowerState is: PowerState/(.*?) \", 1, RawData)\r\n| extend ProvisioningState = extract(\"provisioning state: ProvisioningState/(.*?)~~\", 1, RawData)\r\n| summarize arg_max(TimeGenerated,*) by VMSSName,VMSSInstance\r\n| extend PowerState = strcat(toupper(substring(PowerState, 0, 1)), tolower(substring(PowerState, 1)))\r\n| extend ProvisioningState = strcat(toupper(substring(ProvisioningState, 0, 1)), tolower(substring(ProvisioningState, 1)))\r\n| extend VMSSName = toupper(VMSSName)\r\n| extend VMSSInstance = toupper(VMSSInstance)\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend LastStatusUpdateMinutes = toint(TimeFromNow / 1m)\r\n| project VMSSName,VMSSInstance,LastStatusUpdateMinutes,PowerState,ProvisioningState\r\n| extend Health = iff(LastStatusUpdateMinutes > 15 or PowerState !=\"Running\" or ProvisioningState !=\"Succeeded\",1,0)\r\n| summarize Component = \"Cloud Management Gateway\", SubComponent = \"CMG Scale Set\", Health = max(Health)\r\n| union (\r\n/////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////\r\n//CMG Service Health\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName contains \"CMGService.log\"\r\n| where RawData contains \"Summary - \"\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| parse RawData with * \"TotalRequestCount: \" TotalRequestCount:int \" TotalRequestSize: \" TotalRequestSizeBytes:int *\r\n| parse RawData with * \"TotalResponseCount: \" TotalResponseCount:int \" TotalResponseSize: \" TotalResponseSizeBytes:int *\r\n| parse RawData with * \"AverageElapsedTime: \" AverageElapsedTime_ms:int *\r\n| parse RawData with * \"ProcessingRate: \" ProcessingRate_RequestsPerSecond:real *\r\n| parse RawData with * \"$$<CMGService><\" DateTimeString:string \".\" *\r\n| project TimeGenerated,DateTimeString,Computer,FileName,TotalRequestCount,TotalRequestSizeBytes,TotalResponseCount,TotalResponseSizeBytes,AverageElapsedTime_ms,ProcessingRate_RequestsPerSecond\r\n| extend CMGNode=tostring(split(FileName,\"-\")[2])\r\n| summarize RequestCount=round(sum(TotalRequestCount),0),round(ResponseCount=sum(TotalResponseCount),0),round(RequestSizeBytes=sum(TotalRequestSizeBytes),0),round(ResponseSizeBytes=sum(TotalResponseSizeBytes),0),round(AverageElapsedTime_ms=avg(AverageElapsedTime_ms),0),round(ProcessingRate_RequestsPerSecond=avg(ProcessingRate_RequestsPerSecond),0) by bin(TimeGenerated,1m),CMGNode\r\n| summarize arg_max(TimeGenerated,*) by CMGNode\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend LastSummaryMinutes = toint(TimeFromNow / 1m)\r\n//Response count should be no less than 30% of request count\r\n| extend ResponseCountThreshold = RequestCount * 0.7\r\n| project CMGNode,LastSummaryMinutes,RequestCount,ResponseCount,AverageElapsedTime_ms,ResponseCountThreshold\r\n| extend Health = iff(LastSummaryMinutes > 15 or RequestCount == 0 or ResponseCount<ResponseCountThreshold or AverageElapsedTime_ms > 300000 ,1,0)\r\n| summarize Component = \"Cloud Management Gateway\", SubComponent = \"CMG Service\", Health = max(Health)\r\n)\r\n| summarize Health = max(Health) by Component,SubComponent\r\n| project SubComponent,Health\r\n",
                    "size": 3,
                    "title": "Cloud Management Gateway",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubComponent",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "32.4286ch"
                          }
                        },
                        {
                          "columnMatch": "Health",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "0",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "11.5714ch"
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "SubComponent",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SubComponent",
                          "label": "Component"
                        },
                        {
                          "columnId": "Health",
                          "label": "Health"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "SubComponent",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "query - 4 - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//CMG Connection Point Requests Health\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| where FileName == \"SMS_CLOUD_PROXYCONNECTOR.log\"\r\n| where RawData contains \"ReportTrafficData - state message to send:\"\r\n| parse RawData with * 'ServerName=\"' ServerName '\"' * 'StartTime=\"' StartTime '\"' * 'EndTime=\"' EndTime '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * '<EndPoints>' EndPoints '</EndPoints>' *\r\n| extend EndPoints = split(EndPoints, '~~')\r\n| mv-expand EndPoints\r\n| parse EndPoints with * 'Name=\"' Endpoint '\"' * 'ProxyServer=\"' ProxyServer '\"' * 'TargetHost=\"' TargetHost '\"' * 'TotalRequests=\"' TotalRequests '\"' * 'TotalRequestsWithBearerToken=\"' TotalRequestsWithBearerToken '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * 'TotalRequestBytes=\"' TotalRequestBytes '\"' * 'TotalResponseBytes=\"' TotalResponseBytes '\"' * 'FailedRequests=\"' FailedRequests '\"' *\r\n| extend TotalRequests=toint(TotalRequests),TotalRequestsWithBearerToken=toint(TotalRequestsWithBearerToken), MaxConcurrentRequests=toint(MaxConcurrentRequests), TotalRequestBytes=toint(TotalRequestBytes), TotalResponseBytes=toint(TotalResponseBytes),FailedRequests=toint(FailedRequests)\r\n| project TimeGenerated, ServerName, StartTime, EndTime, Endpoint, ProxyServer, TargetHost, TotalRequests, TotalRequestsWithBearerToken, MaxConcurrentRequests, TotalRequestBytes, TotalResponseBytes, FailedRequests\r\n| where isnotempty(Endpoint)\r\n| extend Target_NB=tostring(split(TargetHost,\".\")[0])\r\n| extend TargetHost_Endpoint = strcat(Target_NB,\": \",Endpoint)\r\n| summarize TotalRequests = sum(TotalRequests), FailedRequests=sum(FailedRequests) by TimeGenerated,Target_NB\r\n| summarize arg_max(TimeGenerated,*) by Target_NB\r\n| project TimeGenerated,Target_NB,TotalRequests,FailedRequests\r\n| extend FailedRequestsThreshold = round(TotalRequests*0.2,0)\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend LastStatusUpdateMinutes = toint(TimeFromNow / 1m)\r\n| project Target_NB,LastStatusUpdateMinutes,TotalRequests,FailedRequests,FailedRequestsThreshold\r\n| extend Health = iff(LastStatusUpdateMinutes > 15 or TotalRequests == 0 or FailedRequests>FailedRequestsThreshold,1,0)\r\n| summarize Component = \"CMG Connection Point\", SubComponent = \"CMG Connection Point Requests\", Health = max(Health)\r\n| union (\r\n/////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////\r\n//CMG Connection Point Web Socket Connections Health\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| where FileName == \"SMS_CLOUD_PROXYCONNECTOR.log\"\r\n| where RawData contains \"WebSocket connections established with proxy server\"\r\n//| summarize arg_max(TimeGenerated,*) by Computer\r\n| parse RawData with * 'There are ' WebSocketConnections ' WebSocket connections' * 'proxy server ' CMGName \":\" Port \"~~\" *\r\n| summarize arg_max(TimeGenerated,*) by Computer,CMGName,Port\r\n| extend CMGName = tostring(split(CMGName,\".\")[0])\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend LastStatusUpdateMinutes = toint(TimeFromNow / 1m)\r\n| project Computer,CMGName,Port,LastStatusUpdateMinutes,WebSocketConnections\r\n| extend Health = iff(LastStatusUpdateMinutes > 10 or WebSocketConnections != 10,1,0)\r\n| summarize Component = \"CMG Connection Point\", SubComponent = \"Web Socket Connections to CMG\", Health = max(Health)\r\n)\r\n| union (\r\n/////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////\r\n//CMG Connection Tests Health\r\nNWConnectionMonitorTestResult \r\n| where SourceResourceId contains \"{ConfigMgrResourceGroup}\" or SourceResourceId contains \"{CMGResourceGroup}\"\r\n| summarize LastConnectionTest=arg_max(TimeGenerated,*) by SourceName, DestinationPort\r\n| extend SourceName = tostring(split(SourceName,\"(\")[0])\r\n| extend TimeFromNow = now() - LastConnectionTest\r\n| extend LastConnectionTestMinutes = toint(TimeFromNow / 1m)\r\n| extend Failed = strcat(ChecksFailed,\"/\",ChecksTotal)\r\n| project Source=SourceName,Port=DestinationPort,LastConnectionTestMinutes,Result=TestResult,ChecksFailed,Failed, MaxRTT=round(MaxRoundTripTimeMs,0),AvgRTT=round(AvgRoundTripTimeMs,0)\r\n| order by Source asc, Port asc\r\n| extend Health = iff(LastConnectionTestMinutes > 5 or Result != \"Pass\" or ChecksFailed > 3 or AvgRTT > 100,1,0)\r\n| summarize Component = \"CMG Connection Point\", SubComponent = \"CMG Connection Tests\", Health = max(Health)\r\n)\r\n| summarize Health = max(Health) by Component,SubComponent\r\n| project SubComponent,Health\r\n",
                    "size": 3,
                    "title": "CMG Connection Point",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubComponent",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "32.4286ch"
                          }
                        },
                        {
                          "columnMatch": "Health",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "0",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "11.5714ch"
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "SubComponent",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SubComponent",
                          "label": "Component"
                        },
                        {
                          "columnId": "Health",
                          "label": "Health"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "SubComponent",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "query - 4",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//Management Point Health Checks Health\r\n//List of Management Points\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| summarize by Computer\r\n| join kind=leftouter(\r\n//MP Availability Check\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Successfully performed Management Point availability check against local computer\"\r\n| summarize LastMPAvailabilityCheckTime = max(TimeGenerated) by Computer\r\n| extend LastMPAvailabilityCheckMinutes = datetime_diff('minute', now(), LastMPAvailabilityCheckTime)\r\n) on Computer\r\n| join kind=leftouter(\r\n//User Service Availability Check\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Successfully performed User Service availability check against local computer\"\r\n| summarize LastUserServiceAvailabilityCheckTime = max(TimeGenerated) by Computer\r\n| extend LastUserServiceAvailabilityCheckMinutes = datetime_diff('minute', now(), LastUserServiceAvailabilityCheckTime)\r\n) on Computer\r\n| join kind=leftouter(\r\n//HTTP Send Request Sync\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Call to HttpSendRequestSync succeeded\"\r\n| summarize LastHTTPSendRequestSyncTime = max(TimeGenerated) by Computer\r\n| extend LastHTTPSendRequestSyncMinutes = datetime_diff('minute', now(), LastHTTPSendRequestSyncTime)\r\n) on Computer\r\n| join kind=leftouter(\r\n//HTTP Test Request\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Http test request succeeded\"\r\n| summarize LastHTTPTestRequestTime = max(TimeGenerated) by Computer\r\n| extend LastHTTPTestRequestMinutes = datetime_diff('minute', now(), LastHTTPTestRequestTime)\r\n) on Computer\r\n| join kind=leftouter(\r\n//Certificate Validation\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Completed validation of Certificate\"\r\n| summarize LastCertValidationTime = max(TimeGenerated) by Computer\r\n| extend LastCertValidationMinutes = datetime_diff('minute', now(), LastCertValidationTime)\r\n) on Computer\r\n| extend LastMPAvailabilityCheckMinutes = iif(isnull(LastMPAvailabilityCheckTime), -111, LastMPAvailabilityCheckMinutes)\r\n| extend LastUserServiceAvailabilityCheckMinutes = iif(isnull(LastUserServiceAvailabilityCheckTime), -111, LastUserServiceAvailabilityCheckMinutes)\r\n| extend LastHTTPSendRequestSyncMinutes = iif(isnull(LastHTTPSendRequestSyncTime), -111, LastHTTPSendRequestSyncMinutes)\r\n| extend LastHTTPTestRequestMinutes = iif(isnull(LastHTTPTestRequestTime), -111, LastHTTPTestRequestMinutes)\r\n| extend LastCertValidationMinutes = iif(isnull(LastCertValidationTime), -111, LastCertValidationMinutes)\r\n| project Computer,LastMPAvailabilityCheckMinutes,LastUserServiceAvailabilityCheckMinutes,LastHTTPSendRequestSyncMinutes,LastHTTPTestRequestMinutes,LastCertValidationMinutes\r\n| extend Health = iff(LastMPAvailabilityCheckMinutes >10 or LastUserServiceAvailabilityCheckMinutes > 10 or LastHTTPSendRequestSyncMinutes >10 or LastHTTPTestRequestMinutes > 10 or LastCertValidationMinutes > 45,1,0)\r\n| summarize Component = \"Management Point\", SubComponent = \"Management Point Health Checks\", Health = max(Health)\r\n| union (\r\n/////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////\r\n//Management Point Service Health\r\nConfigMgr_Logs_CL\r\n| extend Computer=tolower(tostring(split(_ResourceId,\"/\")[8]))\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| distinct Computer\r\n| join kind = leftouter\r\n(\r\nConfigurationData\r\n| where Computer !contains \"test\"\r\n| where ConfigDataType == \"WindowsServices\"\r\n| where SvcDisplayName in\r\n(\r\n//MECM Services\r\n\"SMS Agent Host\",\r\n\"SMS_EXECUTIVE\",\r\n\"SMS_SITE_COMPONENT_MANAGER\",\r\n\"SMS_SITE_VSS_WRITER\",\r\n\"SQL Server VSS Writer\",\r\n\"Windows Management Instrumentation\",\r\n\"World Wide Web Publishing Service\",\r\n\"WSUS Service\"\r\n) or SvcDisplayName contains \"SMS_SITE_SQL_BACKUP\"\r\n| summarize arg_max(TimeGenerated,*) by Computer, _ResourceId,SvcDisplayName\r\n| extend Computer = tolower(Computer)\r\n| project TimeGenerated, Computer,SvcDisplayName,SvcName,SvcAccount,SvcStartupType,SvcState,_ResourceId\r\n) on Computer\r\n| extend LastStatusTimeMinutes = datetime_diff('minute', now(), TimeGenerated)\r\n| project Computer,SvcDisplayName,SvcState, LastStatusTimeMinutes\r\n| order by SvcDisplayName asc, Computer asc\r\n| extend Health = iff(SvcState != \"Running\" or LastStatusTimeMinutes > 1440,1,0)\r\n| summarize Component = \"Management Point\", SubComponent = \"Services\", Health = max(Health)\r\n)\r\n| union (\r\n/////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////\r\n//Management Point Connected Clients Health\r\nPerf\r\n| where _ResourceId contains \"{ConfigMgrResourceGroup}\" or _ResourceId contains \"{CMGResourceGroup}\"\r\n| where ObjectName == \"SMS Notification Server\" and CounterName  == \"Total online clients\"\r\n| summarize AvgClients = avg(CounterValue) by bin(TimeGenerated,15m),Computer\r\n| summarize LastCount = arg_max(TimeGenerated,*) by Computer\r\n| extend Health = iff(AvgClients == 0,1,0)\r\n| summarize Component = \"Management Point\", SubComponent = \"Connected Clients\", Health = max(Health)\r\n)\r\n| summarize Health = max(Health) by Component,SubComponent\r\n| project SubComponent,Health\r\n",
                    "size": 3,
                    "title": "Management Points",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Health",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "0",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "11.5714ch"
                          }
                        },
                        {
                          "columnMatch": "SubComponent",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "32.4286ch"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SubComponent",
                          "label": "Component"
                        },
                        {
                          "columnId": "Health",
                          "label": "Health"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "customWidth": "50",
                  "name": "query - 4 - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//It will join with resources table and patchassessmentresources\r\n((resources //join of virtual machines, you can play with params as you see fit.\r\n//| extend TimeRange = {TimeRange}\r\n| where type =~ \"microsoft.compute/virtualmachines\"\r\n| where name !contains \"test\"\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| where properties.storageProfile.osDisk.osType in~ ('Linux','Windows')\r\n| extend conf = iff(properties.storageProfile.osDisk.osType =~ \"windows\", properties.osProfile.windowsConfiguration.patchSettings.patchMode, properties.osProfile.linuxConfiguration.patchSettings.patchMode)\r\n| extend os = tolower(tostring(properties.storageProfile.osDisk.osType))\r\n| extend id=tolower(id)\r\n| extend status=properties.extended.instanceView.powerState.displayStatus\r\n| extend imageRef = strcat(tolower(tostring(properties.storageProfile.imageReference.publisher)), \":\", tolower(tostring(properties.storageProfile.imageReference.offer)), \":\", tolower(tostring(properties.storageProfile.imageReference.sku)))\r\n// For marketplace images, check in the list of allow listed images for guest patching\r\n| extend isMarketplaceUnsupportedImageUsed = (isnotempty(properties.storageProfile.imageReference.publisher) and isnotempty(properties.storageProfile.imageReference.offer) and isnotempty(properties.storageProfile.imageReference.sku)) and\r\n    not(iff(os =~ \"windows\",\r\n        (imageRef in ('microsoftwindowsserver:microsoftserveroperatingsystems-previews:windows-server-vnext-azure-edition-core','microsoftwindowsserver:windowsserver:2008-r2-sp1','microsoftwindowsserver:windowsserver:2012-r2-datacenter','microsoftwindowsserver:windowsserver:2012-r2-datacenter-gensecond','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2016-datacenter','microsoftwindowsserver:windowsserver:2016-datacenter-gensecond','microsoftwindowsserver:windowsserver:2016-datacenter-server-core','microsoftwindowsserver:windowsserver:2016-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2016-datacenter-with-containers','microsoftwindowsserver:windowsserver:2019-datacenter','microsoftwindowsserver:windowsserver:2019-datacenter-core','microsoftwindowsserver:windowsserver:2019-datacenter-gensecond','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2019-datacenter-with-containers','microsoftwindowsserver:windowsserver:2022-datacenter','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-core','microsoftwindowsserver:windowsserver:2022-datacenter-core-g2','microsoftwindowsserver:windowsserver:2022-datacenter-g2','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserverhotpatch-previews:windows-server-2022-azure-edition-hotpatch','microsoftwindowsserver:microsoftserveroperatingsystems-previews:windows-server-2025-azure-edition-hotpatch','microsoftazuresiterecovery:process-server:windows-2012-r2-datacenter','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v4','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v5','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v6','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v7','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-u8','microsoftsqlserver:sql2016sp1-ws2016:standard','microsoftsqlserver:sql2016sp2-ws2016:standard','microsoftsqlserver:sql2017-ws2016:enterprise','microsoftsqlserver:sql2017-ws2016:standard','microsoftsqlserver:sql2019-ws2019:enterprise','microsoftsqlserver:sql2019-ws2019:sqldev','microsoftsqlserver:sql2019-ws2019:standard','microsoftsqlserver:sql2019-ws2019:standard-gen2','center-for-internet-security-inc:cis-windows-server-2016-v1-0-0-l1:cis-ws2016-l1','center-for-internet-security-inc:cis-windows-server-2016-v1-0-0-l2:cis-ws2016-l2','center-for-internet-security-inc:cis-windows-server-2019-v1-0-0-l1:cis-ws2019-l1','center-for-internet-security-inc:cis-windows-server-2019-v1-0-0-l2:cis-ws2019-l2','center-for-internet-security-inc:cis-win-2019-stig:cis-win-2019-stig','center-for-internet-security-inc:cis-windows-server:cis-windows-server2019-stig-gen1','center-for-internet-security-inc:cis-windows-server-2012-r2-v2-2-1-l2:cis-ws2012-r2-l2','cloud-infrastructure-services:servercore-2019:servercore-2019','cloud-infrastructure-services:hpc2019-windows-server-2019:hpc2019-windows-server-2019','cognosys:sql-server-2016-sp2-std-win2016-debug-utilities:sql-server-2016-sp2-std-win2016-debug-utilities','cloud-infrastructure-services:ad-dc-2016:ad-dc-2016','cloud-infrastructure-services:ad-dc-2019:ad-dc-2019','cloud-infrastructure-services:ad-dc-2022:ad-dc-2022','cloud-infrastructure-services:sftp-2016:sftp-2016','cloud-infrastructure-services:rds-farm-2019:rds-farm-2019','cloud-infrastructure-services:hmailserver:hmailserver-email-server-2016','veeam:office365backup:veeamoffice365backup') or imageRef matches regex 'microsoftwindowsserver:windowsserver:.*|microsoftbiztalkserver:biztalk-server:.*|microsoftdynamicsax:dynamics:.*|microsoftpowerbi:.*:.*|microsoftsharepoint:microsoftsharepointserver:.*|microsoftsqlserver:.*:.*|microsoftvisualstudio:visualstudio.*:.*-ws2012r2|microsoftvisualstudio:visualstudio.*:.*-ws2016|microsoftvisualstudio:visualstudio.*:.*-ws2019|microsoftvisualstudio:visualstudio.*:.*-ws2022|microsoftwindowsserver:windows-cvm:.*|microsoftwindowsserver:windowsserverdotnet:.*|microsoftwindowsserver:windowsserver-gen2preview:.*|microsoftwindowsserver:windowsserversemiannual:.*|microsoftwindowsserver:windowsserverupgrade:.*|microsoftwindowsserverhpcpack:windowsserverhpcpack:.*|microsoft-dsvm:dsvm-windows:.*|microsoft-dsvm:dsvm-win-2019:.*|microsoft-dsvm:dsvm-win-2022:.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2016-l.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2019-l.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2022-l.*|center-for-internet-security-inc:cis-windows-server-2022-l1:.*|center-for-internet-security-inc:cis-windows-server-2022-l2:.*|microsoft-ads:windows-data-science-vm:.*|filemagellc:filemage-gateway-vm-win:filemage-gateway-vm-win-.*|esri:arcgis-enterprise.*:byol.*|esri:pro-byol:pro-byol-.*|veeam:veeam-backup-replication:veeam-backup-replication-v.*|southrivertech1586314123192:tn-ent-payg:tnentpayg.*|belindaczsro1588885355210:belvmsrv01:belvmsrv.*|southrivertech1586314123192:tn-sftp-payg:tnsftppayg.*'),\r\n        not(imageRef in ('redhat:rhel-ha:81_gen2') or imageRef matches regex 'openlogic:centos:8.*|openlogic:centos-hpc:.*|microsoftsqlserver:sql2019-sles.*:.*|microsoftsqlserver:sql2019-rhel7:.*|microsoftsqlserver:sql2017-rhel7:.*|microsoft-ads:.*:.*|suse:sles-sap-15-.*-byos:gen.*') and\r\n            (imageRef in ('canonical:ubuntuserver:16.04-lts','canonical:ubuntuserver:16.04.0-lts','canonical:ubuntuserver:18.04-lts','canonical:ubuntuserver:18_04-lts-gen2','canonical:0001-com-ubuntu-pro-bionic:pro-18_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts-gen2','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts-gen2','canonical:0001-com-ubuntu-server-focal:20_04-lts','canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2','canonical:0001-com-ubuntu-server-jammy:22_04-lts','canonical:0001-com-ubuntu-server-jammy:22_04-lts-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-1','microsoftcblmariner:cbl-mariner:1-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-2','microsoftcblmariner:cbl-mariner:cbl-mariner-2-gen2','microsoft-aks:aks:aks-engine-ubuntu-1804-202112','microsoft-dsvm:aml-workstation:ubuntu-20','microsoft-dsvm:aml-workstation:ubuntu-20-gen2','openlogic:centos:7.2','openlogic:centos:7.3','openlogic:centos:7.4','openlogic:centos:7.5','openlogic:centos:7.6','openlogic:centos:7.7','openlogic:centos:7_8','openlogic:centos:7_9','openlogic:centos:7_9-gen2','openlogic:centos:8.0','openlogic:centos:8_1','openlogic:centos:8_2','openlogic:centos:8_3','openlogic:centos:8_4','openlogic:centos:8_5','openlogic:centos-lvm:7-lvm','openlogic:centos-lvm:8-lvm','redhat:rhel:7.2','redhat:rhel:7.3','redhat:rhel:7.4','redhat:rhel:7.5','redhat:rhel:7.6','redhat:rhel:7.7','redhat:rhel:7.8','redhat:rhel:7_9','redhat:rhel:7-lvm','redhat:rhel:7-raw','redhat:rhel:8','redhat:rhel:8.1','redhat:rhel:81gen2','redhat:rhel:8.2','redhat:rhel:82gen2','redhat:rhel:8_3','redhat:rhel:83-gen2','redhat:rhel:8_4','redhat:rhel:84-gen2','redhat:rhel:8_5','redhat:rhel:85-gen2','redhat:rhel:8_6','redhat:rhel:86-gen2','redhat:rhel:8_7','redhat:rhel:8_8','redhat:rhel:8-lvm','redhat:rhel:8-lvm-gen2','redhat:rhel-raw:8-raw','redhat:rhel-raw:8-raw-gen2','redhat:rhel:9_0','redhat:rhel:9_1','redhat:rhel:9-lvm','redhat:rhel:9-lvm-gen2','suse:sles-12-sp5:gen1','suse:sles-12-sp5:gen2','suse:sles-15-sp2:gen1','suse:sles-15-sp2:gen2','almalinux:almalinux-x86_64:8_7-gen2','almalinux:almalinux-hpc:8_6-hpc','almalinux:almalinux-hpc:8_6-hpc-gen2','aviatrix-systems:aviatrix-bundle-payg:aviatrix-enterprise-bundle-byol','aviatrix-systems:aviatrix-copilot:avx-cplt-byol-01','aviatrix-systems:aviatrix-copilot:avx-cplt-byol-02','aviatrix-systems:aviatrix-companion-gateway-v9:aviatrix-companion-gateway-v9','aviatrix-systems:aviatrix-companion-gateway-v10:aviatrix-companion-gateway-v10','aviatrix-systems:aviatrix-companion-gateway-v10:aviatrix-companion-gateway-v10u','aviatrix-systems:aviatrix-companion-gateway-v12:aviatrix-companion-gateway-v12','aviatrix-systems:aviatrix-companion-gateway-v13:aviatrix-companion-gateway-v13','aviatrix-systems:aviatrix-companion-gateway-v13:aviatrix-companion-gateway-v13u','aviatrix-systems:aviatrix-companion-gateway-v14:aviatrix-companion-gateway-v14','aviatrix-systems:aviatrix-companion-gateway-v14:aviatrix-companion-gateway-v14u','aviatrix-systems:aviatrix-companion-gateway-v16:aviatrix-companion-gateway-v16','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts','center-for-internet-security-inc:cis-rhel:cis-redhat7-l1-gen1','center-for-internet-security-inc:cis-rhel-7-l2:cis-rhel7-l2','center-for-internet-security-inc:cis-rhel-8-stig:cis-rhel-8-stig','center-for-internet-security-inc:cis-oracle-linux-8-l1:cis-oracle8-l1','center-for-internet-security-inc:cis-ubuntu:cis-ubuntu1804-l1','center-for-internet-security-inc:cis-ubuntu:cis-ubuntulinux2004-l1-gen1','center-for-internet-security-inc:cis-ubuntu-linux-1804-l1:cis-ubuntu1804-l1','center-for-internet-security-inc:cis-ubuntu-linux-2004-l1:cis-ubuntu2004-l1','center-for-internet-security-inc:cis-ubuntu-linux-2204-l1:cis-ubuntu-linux-2204-l1','center-for-internet-security-inc:cis-ubuntu-linux-2204-l1:cis-ubuntu-linux-2204-l1-gen2','cloud-infrastructure-services:dns-ubuntu-2004:dns-ubuntu-2004','cloud-infrastructure-services:squid-ubuntu-2004:squid-ubuntu-2004','cloud-infrastructure-services:load-balancer-nginx:load-balancer-nginx','cloudera:cloudera-centos-os:7_5','cncf-upstream:capi:ubuntu-1804-gen1','cncf-upstream:capi:ubuntu-2004-gen1','cncf-upstream:capi:ubuntu-2204-gen1','credativ:debian:9','credativ:debian:9-backports','debian:debian-10:10','debian:debian-10:10-gen2','debian:debian-10:10-backports','debian:debian-10:10-backports-gen2','debian:debian-10-daily:10','debian:debian-10-daily:10-gen2','debian:debian-10-daily:10-backports','debian:debian-10-daily:10-backports-gen2','debian:debian-11:11','debian:debian-11:11-gen2','debian:debian-11:11-backports','debian:debian-11:11-backports-gen2','debian:debian-11-daily:11','debian:debian-11-daily:11-gen2','debian:debian-11-daily:11-backports','debian:debian-11-daily:11-backports-gen2','erockyenterprisesoftwarefoundationinc1653071250513:rockylinux:free','erockyenterprisesoftwarefoundationinc1653071250513:rockylinux-9:rockylinux-9','github:github-enterprise:github-enterprise','matillion:matillion:matillion-etl-for-snowflake','microsoft-dsvm:aml-workstation:ubuntu','microsoft-dsvm:ubuntu-hpc:1804','microsoft-dsvm:ubuntu-hpc:2004-preview-ndv5','microsoft-dsvm:ubuntu-hpc:2004','microsoft-dsvm:ubuntu-hpc:2204-preview-ndv5','microsoft-dsvm:ubuntu-hpc:2204','microsoft-dsvm:ubuntu-1804:1804-gen2','microsoft-dsvm:ubuntu-2004:2004','microsoft-dsvm:ubuntu-2004:2004-gen2','netapp:netapp-oncommand-cloud-manager:occm-byol','nginxinc:nginx-plus-ent-v1:nginx-plus-ent-centos7','ntegralinc1586961136942:ntg_oracle_8_7:ntg_oracle_8_7','ntegralinc1586961136942:ntg_ubuntu_20_04_lts:ntg_ubuntu_20_04_lts','openlogic:centos-hpc:7.1','openlogic:centos-hpc:7.3','oracle:oracle-linux:8','oracle:oracle-linux:8-ci','oracle:oracle-linux:81','oracle:oracle-linux:81-ci','oracle:oracle-linux:81-gen2','oracle:oracle-linux:ol82','oracle:oracle-linux:ol8_2-gen2','oracle:oracle-linux:ol82-gen2','oracle:oracle-linux:ol83-lvm','oracle:oracle-linux:ol83-lvm-gen2','oracle:oracle-linux:ol84-lvm','oracle:oracle-linux:ol84-lvm-gen2','procomputers:almalinux-8-7:almalinux-8-7','procomputers:rhel-8-2:rhel-8-2','procomputers:rhel-8-8-gen2:rhel-8-8-gen2','procomputers:rhel-8-9-gen2:rhel-8-9-gen2','redhat:rhel:89-gen2','redhat:rhel-byos:rhel-raw76','redhat:rhel-byos:rhel-lvm88','redhat:rhel-byos:rhel-lvm88-gen2','redhat:rhel-byos:rhel-lvm92','redhat:rhel-byos:rhel-lvm-92-gen2','redhat:rhel-ha:9_2','redhat:rhel-ha:9_2-gen2','redhat:rhel-sap-apps:9_0','redhat:rhel-sap-apps:90sapapps-gen2','redhat:rhel-sap-apps:9_2','redhat:rhel-sap-apps:92sapapps-gen2','redhat:rhel-sap-ha:9_2','redhat:rhel-sap-ha:92sapha-gen2','openlogic:centos-ci:7-ci','openlogic:centos-lvm:7-lvm-gen2','oracle:oracle-database:oracle_db_21','oracle:oracle-database-19-3:oracle-database-19-0904','redhat:rhel-sap-ha:90sapha-gen2','suse:sles:12-sp4-gen2','suse:sles-15-sp2-basic:gen2','suse:sles-15-sp2-hpc:gen2','suse:sles-15-sp4-sapcal:gen1','suse:sles-byos:12-sp4','suse:sles-byos:12-sp4-gen2','suse:sles-sap:12-sp4','suse:sles-sap:12-sp4-gen2','suse:sles-sap-byos:12-sp4','suse:sles-sap-byos:12-sp4-gen2','suse:sles-sap-byos:gen2-12-sp4','suse:sles-sapcal:12-sp3','suse:sles-standard:12-sp4-gen2','suse:sles-sap-15-sp2-byos:gen2','talend:talend_re_image:tlnd_re','tenable:tenablecorewas:tenablecoreol8wasbyol','thorntechnologiesllc:sftpgateway:sftpgateway','zscaler:zscaler-private-access:zpa-con-azure') or imageRef matches regex 'almalinux:almalinux:8-gen.*|almalinux:almalinux:9-gen.*|almalinux:almalinux-x86_64:8-gen.*|almalinux:almalinux-x86_64:9-gen.*|canonical:.*:.*|center-for-internet-security-inc:cis-rhel:cis-redhat8-l.*-gen1|center-for-internet-security-inc:cis-rhel:cis-redhat9-l1-gen.*|center-for-internet-security-inc:cis-rhel-8-l.*:cis-rhel8-l.*|center-for-internet-security-inc:cis-rhel9-l1:cis-rhel9-l1.*|center-for-internet-security-inc:cis-ubuntu:cis-ubuntulinux2204-l1-gen.*|microsoftsqlserver:.*:.*|openlogic:centos:7.*|oracle:oracle-database-.*:18..*|oracle:oracle-linux:7.*|openlogic:centos:8.*|oracle:oracle-linux:ol7.*|oracle:oracle-linux:ol8.*|oracle:oracle-linux:ol9.*|redhat:rhel:7.*|redhat:rhel:8.*|redhat:rhel:9.*|redhat:rhel-byos:rhel-lvm7.*|redhat:rhel-byos:rhel-lvm8.*|redhat:rhel-ha:8.*|redhat:rhel-raw:7.*|redhat:rhel-raw:8.*|redhat:rhel-raw:9.*|redhat:rhel-sap:7.*|redhat:rhel-sap-apps:7.*|redhat:rhel-sap-apps:8.*|redhat:rhel-sap-.*:9_0|redhat:rhel-sap-ha:7.*|redhat:rhel-sap-ha:8.*|suse:opensuse-leap-15-.*:gen.*|suse:sles-12-sp5-.*:gen.*|oracle:oracle-linux:ol9-lvm.*|suse:sles-sap-12-sp5.*:gen.*|suse:sles-sap-15-.*:gen.*|suse:sle-hpc-15-sp4:gen.*|suse:sles-15-sp1-sapcal:gen.*|suse:sles-15-sp3-sapcal:gen.*|suse:sles-15-sp4:gen.*|suse:sles-15-sp4-basic:gen.*|suse:sle-hpc-15-sp4-byos:gen.*|suse:sle-hpc-15-sp5-byos:gen.*|suse:sle-hpc-15-sp5:gen.*|suse:sles-15-sp4-byos:gen.*|suse:sles-15-sp4-chost-byos:gen.*|suse:sles-15-sp4-hardened-byos:gen.*|suse:sles-15-sp5-basic:gen.*|suse:sles-15-sp5-byos:gen.*|suse:sles-15-sp5-chost-byos:gen.*|suse:sles-15-sp5-hardened-byos:gen.*|suse:sles-15-sp5-sapcal:gen.*|suse:sles-15-sp5:gen.*|suse:sles-sap-15-sp4-byos:gen.*|suse:sles-sap-15-sp4-hardened-byos:gen.*|suse:sles-sap-15-sp5-byos:gen.*|suse:sles-sap-15-sp5-hardened-byos:gen.*')))\r\n| project id, name, os, type, conf, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed)\r\n| union\r\n(resources //union with arc servers, you can play with params as you see fit.\r\n| where type =~ \"microsoft.hybridcompute/machines\"\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| extend id=tolower(id)\r\n| extend os=tolower(coalesce(tostring(properties.osName), tostring(properties.osType)))\r\n| where os in~ ('Linux', 'Windows')\r\n| extend status=properties.status\r\n| extend isMarketplaceUnsupportedImageUsed = false\r\n| project id, name, os, type, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed))\r\n| join kind=leftouter(\r\n    resources\r\n    | where type in~ (\"Microsoft.SqlVirtualMachine/sqlVirtualMachines\", \"microsoft.azurearcdata/sqlserverinstances\")\r\n    | project resourceId = iff(type =~ \"Microsoft.SqlVirtualMachine/sqlVirtualMachines\", tolower(properties.virtualMachineResourceId), tolower(properties.containerResourceId)), sqlType = type\r\n    | summarize by resourceId, sqlType\r\n) on $left.id == $right.resourceId\r\n| extend type = iff(isnotempty(sqlType), sqlType, type)\r\n| project-away sqlType, resourceId\r\n| where type in~ (\"microsoft.compute/virtualmachines\", \"microsoft.hybridcompute/machines\", \"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.azurearcdata/sqlserverinstances\") // Filtering by resource type\r\n| join kind=leftouter //finally, making a left outer join to fetch updates details from patchassessment\r\n((patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n| where properties.status =~ \"Succeeded\" or properties.status =~ \"Inprogress\" or (isnotnull(properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ \"Unsupported\"))\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend resourceId=tolower(resourceId)\r\n| project resourceId, assessProperties=properties))\r\non $left.id == $right.resourceId //join on resources id & patchassessment id that is parsed.\r\n| extend isUnsupported = isMarketplaceUnsupportedImageUsed or (isnotnull(assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ \"Unsupported\"))\r\n| summarize\r\ntotal = countif(1 == 1),\r\nnodata = countif((isnull(assessProperties) == true and not(isUnsupported)) or assessProperties.status =~ \"inprogress\"), // not(isUnsupported) condition is for removing unsupported machines.\r\npendingReboot = countif(isnotnull(assessProperties) and assessProperties.rebootPending == \"true\" and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\n//pendingUpdates - when any classification has > 0 updates\r\npendingUpdatesWindows = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Windows\" and (assessProperties.availablePatchCountByClassification.critical>0 or assessProperties.availablePatchCountByClassification.security>0 or assessProperties.availablePatchCountByClassification.updateRollup>0 or assessProperties.availablePatchCountByClassification.featurePack>0 or assessProperties.availablePatchCountByClassification.servicePack>0 or assessProperties.availablePatchCountByClassification.definition>0 or assessProperties.availablePatchCountByClassification.tools>0 or assessProperties.availablePatchCountByClassification.updates>0) and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\npendingUpdatesLinux = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Linux\" and (assessProperties.availablePatchCountByClassification.security>0 or assessProperties.availablePatchCountByClassification.other>0) and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\n//noPendingUpdates - when all classifications has 0 updates\r\nnoPendingUpdatesWindows = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Windows\" and (assessProperties.availablePatchCountByClassification.critical==0 and assessProperties.availablePatchCountByClassification.security==0 and assessProperties.availablePatchCountByClassification.updateRollup==0 and assessProperties.availablePatchCountByClassification.featurePack==0 and assessProperties.availablePatchCountByClassification.servicePack==0 and assessProperties.availablePatchCountByClassification.definition==0 and assessProperties.availablePatchCountByClassification.tools==0 and assessProperties.availablePatchCountByClassification.updates==0) and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\nnoPendingUpdatesLinux = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Linux\" and (assessProperties.availablePatchCountByClassification.security==0 and assessProperties.availablePatchCountByClassification.other==0) and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\nunsupported = countif(isUnsupported and not(isnotnull(assessProperties) and assessProperties.status =~ \"inprogress\"))\r\n| project total, nodata, pendingReboot,pendingUpdates = pendingUpdatesWindows+pendingUpdatesLinux, noPendingUpdates = noPendingUpdatesWindows+noPendingUpdatesLinux, unsupported\r\n| project machinePack = pack(\"No pending updates\", noPendingUpdates, \"Pending updates\", pendingUpdates, \"Pending reboot\", pendingReboot,  \"No updates data\", nodata, \"Unsupported\",unsupported, \"Total machines\", total)\r\n| mv-expand machinePack\r\n| extend machine = tostring(bag_keys(machinePack)[0])\r\n| extend count_ = tolong(machinePack[machine])\r\n| project machine, count_ \r\n| where machine !=\"Total machines\"\r\n| where machine != \"Unsupported\"",
                    "size": 4,
                    "title": "Update Status",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "machine",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "sourceColumn": "count_",
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "No pending updates",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Unsupported",
                                "representation": "1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Pending reboot",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "No updates data",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Pending updates",
                                "representation": "1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "machine",
                          "label": "Status"
                        },
                        {
                          "columnId": "count_",
                          "label": "Count"
                        }
                      ]
                    },
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "machine",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "No updates data",
                          "color": "gray"
                        },
                        {
                          "seriesName": "Pending updates",
                          "color": "redBright"
                        },
                        {
                          "seriesName": "Unsupported",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "No pending updates",
                          "color": "green"
                        },
                        {
                          "seriesName": "Pending reboot",
                          "color": "yellow"
                        }
                      ],
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "name": "query - 9 - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "customWidth": "40",
            "name": "Left Column Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "5e302ec8-e478-44cb-a50f-b18bb3bc19bb",
                              "version": "KqlParameterItem/1.0",
                              "name": "ShowResolvedAlerts",
                              "label": "Show Resolved Alerts",
                              "type": 2,
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\"Yes\", \"No\"]",
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "value": "No"
                            },
                            {
                              "id": "b52c5880-e0fd-4722-9e14-3539b86eeb3c",
                              "version": "KqlParameterItem/1.0",
                              "name": "ShowClosedAlerts",
                              "label": "Show Closed Alerts",
                              "type": 2,
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\"Yes\", \"No\"]",
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "value": "No"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "alertsmanagementresources\r\n| where name like \"ConfigMgr\"\r\n| extend FireTime = todatetime(properties.essentials.startDateTime), \r\n         LastModifiedTime = todatetime(properties.essentials.lastModifiedDateTime),\r\n         Severity = tostring(properties.essentials.severity), \r\n         MonitorCondition = tostring(properties.essentials.monitorCondition), \r\n         AlertTarget = tostring(properties.essentials.targetResourceType), \r\n         MonitorService = tostring(properties.essentials.monitorService),\r\n         ResolvedTime = todatetime(properties.essentials.monitorConditionResolvedDateTime),\r\n         AlertState = tostring(properties.essentials.alertState),\r\n         Resource = tostring(properties.essentials.targetResource)\r\n//Severity, Condition, and State Filters\r\n| extend ConditionFilter = case(\"{ShowResolvedAlerts}\"==\"Yes\",\"AllConditions\",\"Resolved\")\r\n| where ConditionFilter == \"AllConditions\" or ConditionFilter != MonitorCondition\r\n| extend StateFilter = case(\"{ShowClosedAlerts}\"==\"Yes\",\"AllStates\",\"Closed\")\r\n| where StateFilter == \"AllStates\" or StateFilter != AlertState\r\n| where FireTime {TimeRange}\r\n/////////////\r\n| extend AlertTarget = case(\r\n                MonitorService == 'ActivityLog Administrative', 'ActivityLog',\r\n                AlertTarget == 'microsoft.insights/components', 'App Insights',\r\n                AlertTarget == 'microsoft.operationalinsights/workspaces', 'Log Analytics', \r\n                AlertTarget)          \r\n| mv-expand Condition = properties.context.context.condition.allOf\r\n| extend ResourceName = iff(AlertTarget == \"ActivityLog\", properties.context.context.activityLog.subscriptionId, tostring(properties.essentials.targetResourceName))\r\n| project Severity,name, Resource,ResourceName,id, AlertTarget, FireTime,MonitorCondition,AlertState,subscriptionId//, OpenTime\r\n| sort by FireTime desc",
                          "size": 3,
                          "title": "Alerts",
                          "noDataMessage": "No Alerts",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Sev0",
                                      "representation": "Sev0",
                                      "text": "0 - Critical"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Sev1",
                                      "representation": "Sev1",
                                      "text": "1 - Error"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Sev2",
                                      "representation": "Sev2",
                                      "text": "2 - Warnung"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Sev3",
                                      "representation": "Sev3",
                                      "text": "3 - Informational"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Sev4",
                                      "representation": "Sev4",
                                      "text": "4 - Verbose"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "unknown",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "16.5ch"
                                }
                              },
                              {
                                "columnMatch": "name",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "OpenBlade",
                                  "linkIsContextBlade": true,
                                  "bladeOpenContext": {
                                    "bladeName": "AlertDetailsTemplateBlade",
                                    "extensionName": "Microsoft_Azure_Monitoring",
                                    "bladeParameters": [
                                      {
                                        "name": "alertId",
                                        "source": "column",
                                        "value": "id"
                                      },
                                      {
                                        "name": "alertName",
                                        "source": "column",
                                        "value": "name"
                                      },
                                      {
                                        "name": "invokedFrom",
                                        "source": "static",
                                        "value": "Workbooks"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "63.2857ch"
                                }
                              },
                              {
                                "columnMatch": "Resource",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "22.8571ch"
                                }
                              },
                              {
                                "columnMatch": "ResourceName",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "id",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "AlertTarget",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "FireTime",
                                "formatter": 6,
                                "formatOptions": {
                                  "customColumnWidthSetting": "28.5714ch"
                                }
                              },
                              {
                                "columnMatch": "MonitorCondition",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Fired",
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Resolved",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "19ch"
                                }
                              },
                              {
                                "columnMatch": "AlertState",
                                "formatter": 5,
                                "formatOptions": {
                                  "customColumnWidthSetting": "19ch"
                                }
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5
                              }
                            ],
                            "sortBy": [
                              {
                                "itemKey": "$gen_link_name_1",
                                "sortOrder": 1
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "name",
                                "label": "Name"
                              },
                              {
                                "columnId": "FireTime",
                                "label": "Time Fired"
                              },
                              {
                                "columnId": "MonitorCondition",
                                "label": "Alert Condition"
                              },
                              {
                                "columnId": "AlertState",
                                "label": "User Response"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_link_name_1",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "name": "query - 0",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "name": "AlertsGroup"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Perf\r\n| where _ResourceId contains \"{ConfigMgrResourceGroup:label}\" or _ResourceId contains \"{CMGResourceGroup:label}\"\r\n| where ObjectName == \"SMS Notification Server\" and CounterName  == \"Total online clients\"\r\n| summarize CounterValue = round(avg(CounterValue),0) by bin(TimeGenerated,15m),Computer\r\n| project TimeGenerated,Computer,CounterValue",
                    "size": 0,
                    "aggregation": 5,
                    "title": "Online Clients",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "showLegend": true
                    }
                  },
                  "name": "query - 7 - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "customWidth": "60",
            "name": "Right Column Group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "HealthState"
      },
      "name": "Health State Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//AMA Heartbeat\r\nHeartbeat\r\n| where ResourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or ResourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| where _ResourceId !contains \"test\"\r\n| where TimeGenerated >ago(90d)\r\n| extend ResourceType=tolower(ResourceType)\r\n| extend ResourceId = tolower(ResourceId)\r\n| where ResourceType in (\"virtualmachines\",\"virtualmachinescalesets\",\"machines\")\r\n| where Category == \"Azure Monitor Agent\"\r\n| extend Computer = toupper(Computer) \r\n| extend Computer=tostring(split(Computer,\".\")[0])\r\n| summarize LastAMAHeartbeat = arg_max(TimeGenerated,*) by ResourceId\r\n| extend TimeFromNow = now() - LastAMAHeartbeat\r\n| extend AMAHeartbeat = toint(TimeFromNow / 1s)\r\n| project Computer,OSType,ResourceId,ResourceType,ResourceGroup,SubscriptionId, LastAMAHeartbeat,TimeFromNow,AMAHeartbeat\r\n| join kind=leftouter\r\n//VMInsights\r\n(\r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Name != \"Heartbeat\"\r\n| extend ResourceId = tolower(_ResourceId)\r\n| extend Computer = toupper(Computer)\r\n| extend Computer=tostring(split(Computer,\".\")[0])\r\n| where TimeGenerated > ago(2d)\r\n| summarize LastVMICollection = max(TimeGenerated) by ResourceId\r\n| extend TimeFromNow = now() - LastVMICollection\r\n| extend VMICollection = toint(TimeFromNow / 1s)\r\n) on ResourceId\r\n| join kind=leftouter\r\n//Syslog\r\n(\r\nSyslog\r\n| where TimeGenerated > ago(30d)\r\n| summarize LastSyslogCollection = max(TimeGenerated) by Computer,_ResourceId\r\n//get Computer name from resource ID since it could be forwarding for another computer\r\n| extend RID_split = split(_ResourceId,\"/\")\r\n| extend Computer=tostring(RID_split[8])\r\n| summarize LastSyslogCollection = max(LastSyslogCollection) by Computer//,_ResourceId\r\n| extend TimeFromNow = now() - LastSyslogCollection\r\n| extend SyslogCollection = toint(TimeFromNow / 1s)\r\n| extend Computer = toupper(Computer)\r\n| extend Computer=tostring(split(Computer,\".\")[0])\r\n) on Computer\r\n//Sentinel Data\r\n| join kind=leftouter \r\n(\r\nSecurityEvent\r\n| where TimeGenerated > ago(2d)\r\n| extend ResourceId = tolower(_ResourceId)\r\n| summarize LastSecurityEventCollection = arg_max(TimeGenerated,Computer) by ResourceId\r\n| extend Computer = toupper(Computer)\r\n| extend Computer=tostring(split(Computer,\".\")[0])\r\n| extend TimeFromNow = now() - LastSecurityEventCollection\r\n| extend SecurityEventCollection = toint(TimeFromNow / 1s)\r\n) on ResourceId\r\n//Change Tracking data\r\n| join kind=leftouter\r\n(\r\nConfigurationData\r\n| where TimeGenerated > ago(2d)\r\n| extend ResourceId = tolower(_ResourceId)\r\n| summarize LastChangeTrackingEvent = arg_max(TimeGenerated,Computer) by ResourceId\r\n| extend Computer = toupper(Computer)\r\n| extend Computer=tostring(split(Computer,\".\")[0])\r\n| extend TimeFromNow = now() - LastChangeTrackingEvent\r\n| extend ChangeTrackingEventCollection = toint(TimeFromNow / 1s)\r\n) on ResourceId\r\n//MDE Data\r\n| join kind=leftouter\r\n(\r\nDeviceInfo\r\n| where TimeGenerated > ago(4h)\r\n| where SensorHealthState ==\"Active\"\r\n| where OnboardingStatus == \"Onboarded\"\r\n| extend Computer = toupper(DeviceName)\r\n| extend Computer=tostring(split(Computer,\".\")[0])\r\n| summarize LastDeviceInfo = max(TimeGenerated) by Computer\r\n| extend TimeFromNow = now() - LastDeviceInfo\r\n| extend LastMDEData = toint(TimeFromNow / 1s)\r\n) on Computer\r\n//Put it all together\r\n| extend MDEState = case (LastDeviceInfo>ago(4h),\"Onboarded & Active\",\"Not Onboarded & Active\")\r\n| extend AMAState = case (LastAMAHeartbeat>ago(5m),\"Connected\",\"Not Connected\")\r\n| extend VMInsightsState = case (LastVMICollection>ago(5m),\"Connected\",\"Not Connected\")\r\n| extend SyslogState = case (LastSyslogCollection>ago(30m) and (OSType==\"Linux\"),\"Connected\",\"Not Connected\")\r\n| extend SyslogState = case (OSType==\"Windows\",\"n/a\",SyslogState)\r\n| extend SyslogCollection = case (OSType==\"Windows\",-222,isempty(SyslogCollection),-1, SyslogCollection)\r\n| extend SecurityEventState = case (LastSecurityEventCollection>ago(5m) and (OSType==\"Windows\"),\"Connected\",\"Not Connected\")\r\n| extend SecurityEventState = case (OSType==\"Linux\",\"n/a\",SecurityEventState)\r\n| extend ChangeTrackingState = case (LastChangeTrackingEvent>ago(1d),\"Connected\",\"Not Connected\")\r\n| extend MonitoringStatus = case(AMAState != \"Connected\" and VMInsightsState != \"Connected\" and ChangeTrackingState != \"Connected\",\"Offline\", case(AMAState != \"Connected\" or VMInsightsState != \"Connected\" or ChangeTrackingState != \"Connected\",\"Partially Offline\",\"Online\"))\r\n| extend ResourceType = case(ResourceType==\"virtualmachines\",\"Virtual Machine\",ResourceType==\"virtualmachinescalesets\",\"VM Scale Set\",ResourceType=='machines',\"Azure Arc Machine\",ResourceType)\r\n| extend ResourceGroup=tolower(ResourceGroup)\r\n| extend ResourceType_OS=strcat(OSType,\" \",ResourceType)\r\n| project ResourceType_OS,Computer,ResourceGroup,ResourceId, MonitoringStatus,AMAState,VMInsightsState,SecurityEventState, ChangeTrackingState,MDEState, SyslogState,AMAHeartbeat, VMICollection,ChangeTrackingEventCollection,LastMDEData\r\n| summarize MonitoringOnlineCount=count(MonitoringStatus == \"Online\"),SecurityEventConnectedCount=count(SecurityEventState==\"Connected\"),MDConnectedCount=count(MDEState==\"Onboarded & Active\") by ResourceType_OS\r\n| extend Count = case(ResourceType_OS == \"Windows Virtual Machine\",{WindowsVMCount},case(ResourceType_OS == \"Windows VM Scale Set\",{WindowsVMSSCount},0))",
              "size": 3,
              "title": "VM Configuration",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "MonitoringOnlineCount",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "<",
                          "thresholdValue": "[\"Count\"]",
                          "representation": "4",
                          "text": "{0}{1} / [\"Count\"]"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1} / [\"Count\"]"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "SecurityEventConnectedCount",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "<",
                          "thresholdValue": "[\"Count\"]",
                          "representation": "4",
                          "text": "{0}{1} / [\"Count\"]"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1} / [\"Count\"]"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "MDConnectedCount",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "sourceColumn": "ResourceType_OS",
                          "operator": "contains",
                          "thresholdValue": "Scale Set",
                          "representation": "more",
                          "text": "n/a"
                        },
                        {
                          "operator": "<",
                          "thresholdValue": "[\"Count\"]",
                          "representation": "4",
                          "text": "{0}{1} / [\"Count\"]"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1} / [\"Count\"]"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "ResourceType_OS",
                    "label": "Resource Type"
                  },
                  {
                    "columnId": "MonitoringOnlineCount",
                    "label": "Monitoring"
                  },
                  {
                    "columnId": "SecurityEventConnectedCount",
                    "label": "Sentinel"
                  },
                  {
                    "columnId": "MDConnectedCount",
                    "label": "MDE"
                  },
                  {
                    "columnId": "Count",
                    "label": "Count"
                  }
                ]
              }
            },
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//AMA Heartbeat\r\nHeartbeat\r\n| where ResourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or ResourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| where _ResourceId !contains \"test\"\r\n| extend ResourceType=tolower(ResourceType)\r\n| extend ResourceId = tolower(ResourceId)\r\n| where ResourceType in (\"virtualmachines\",\"virtualmachinescalesets\",\"machines\")\r\n| where Category == \"Azure Monitor Agent\"\r\n| extend Computer = toupper(Computer) \r\n| extend Computer=tostring(split(Computer,\".\")[0])\r\n| summarize LastAMAHeartbeat = arg_max(TimeGenerated,*) by ResourceId\r\n| extend TimeFromNow = now() - LastAMAHeartbeat\r\n| extend AMAHeartbeat = toint(TimeFromNow / 1s)\r\n| project Computer,OSType,ResourceId,ResourceType,ResourceGroup,SubscriptionId, LastAMAHeartbeat,TimeFromNow,AMAHeartbeat\r\n//CPU\r\n| join kind=leftouter\r\n(\r\nInsightsMetrics\r\n| where TimeGenerated > ago(10m)\r\n| where Namespace == \"Processor\" and Name == \"UtilizationPercentage\"\r\n| extend ResourceId = tolower(_ResourceId)\r\n| summarize AvgCPU = round(avg(Val),0) by ResourceId,Computer\r\n| project Computer,AvgCPU,ResourceId\r\n) on ResourceId\r\n//Used Memory\r\n| join kind=leftouter\r\n(\r\nInsightsMetrics\r\n| where TimeGenerated >ago(10m)\r\n| where Namespace == \"Memory\" and Name == \"AvailableMB\"\r\n| extend ResourceId = tolower(_ResourceId)\r\n| extend AvailableMemory=toreal(Val)\r\n| extend TotalMemory = toreal(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"])\r\n| extend AvailableMemoryPercentage = (AvailableMemory / TotalMemory) * 100.0\r\n| extend UsedMemory = (TotalMemory-AvailableMemory)\r\n| extend UsedMemoryPercentage = (UsedMemory / TotalMemory) * 100\r\n| summarize UsedMemoryPercentage=avg(UsedMemoryPercentage) by Computer,ResourceId\r\n| extend UsedMemoryPercentage=toint(round(UsedMemoryPercentage))\r\n) on ResourceId\r\n//Disk Space\r\n| join kind=leftouter\r\n(\r\nInsightsMetrics\r\n| where TimeGenerated > ago(10m)\r\n| where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" and Tags contains \"C:\"\r\n| summarize arg_max(TimeGenerated,*) by _ResourceId\r\n| extend PercentUsedSpace_C = round(100-Val,0)\r\n| extend ResourceId = tolower(_ResourceId)\r\n| project Computer,PercentUsedSpace_C,ResourceId\r\n) on ResourceId\r\n//Put it all together\r\n| extend ResourceGroup=tolower(ResourceGroup)\r\n| project ResourceId,AMAHeartbeat,AvgCPU,UsedMemoryPercentage,PercentUsedSpace_C",
              "size": 3,
              "title": "VM Status",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "ResourceId",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "22ch"
                    }
                  },
                  {
                    "columnMatch": "AMAHeartbeat",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": ">",
                          "thresholdValue": "300",
                          "representation": "4",
                          "text": "Offline"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Online"
                        }
                      ],
                      "customColumnWidthSetting": "16.1429ch"
                    }
                  },
                  {
                    "columnMatch": "AvgCPU",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "67px"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "UsedMemoryPercentage",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "122px"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "PercentUsedSpace_C",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "142px"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "MonitoringStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "Online",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "SecurityEventState",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "Connected",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "MDEState",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "sourceColumn": "ResourceId",
                          "operator": "contains",
                          "thresholdValue": "scaleset",
                          "representation": "more",
                          "text": "n/a"
                        },
                        {
                          "operator": "!=",
                          "thresholdValue": "Onboarded & Active",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "$gen_link_ResourceId_0",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "ResourceId",
                    "label": "Resource"
                  },
                  {
                    "columnId": "AMAHeartbeat",
                    "label": "Monitoring"
                  },
                  {
                    "columnId": "AvgCPU",
                    "label": "CPU"
                  },
                  {
                    "columnId": "UsedMemoryPercentage",
                    "label": "Used Memory"
                  },
                  {
                    "columnId": "PercentUsedSpace_C",
                    "label": "% Used Space (C:)"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_link_ResourceId_0",
                  "sortOrder": 1
                }
              ]
            },
            "name": "query - 1 - Copy",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "VirtualMachines"
      },
      "customWidth": "40",
      "name": "VM Status Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "ConfigurationData\r\n| where _ResourceId contains \"{ConfigMgrResourceGroup:label}\" or _ResourceId contains \"{CMGResourceGroup:label}\"\r\n| where Computer !contains \"test\"\r\n| where ConfigDataType == \"WindowsServices\"\r\n| where SvcDisplayName in\r\n(\r\n//MECM Services\r\n\"SMS Agent Host\",\r\n\"SMS_EXECUTIVE\",\r\n\"SMS_SITE_COMPONENT_MANAGER\",\r\n\"SMS_SITE_VSS_WRITER\",\r\n\"SQL Server VSS Writer\",\r\n\"Windows Management Instrumentation\",\r\n\"World Wide Web Publishing Service\",\r\n\"WSUS Service\"\r\n) or SvcDisplayName contains \"SMS_SITE_SQL_BACKUP\"\r\n| summarize arg_max(TimeGenerated,*) by Computer, _ResourceId,SvcDisplayName\r\n| project TimeGenerated, Computer,SvcDisplayName,SvcName,SvcAccount,SvcStartupType,SvcState,_ResourceId\r\n| summarize Count=count(), Running = countif(SvcState == \"Running\"), NotRunning = make_list_if(Computer,SvcState !=\"Running\") by SvcDisplayName\r\n| extend NotRunning=case(NotRunning == \"[]\",\"n/a\",NotRunning)\r\n| order by SvcDisplayName asc",
              "size": 3,
              "title": "ConfigMgr Essential Services",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "SvcDisplayName",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "sourceColumn": "Running",
                          "operator": "<",
                          "thresholdValue": "[\"Count\"]",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Running",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "<",
                          "thresholdValue": "[\"Count\"]",
                          "representation": "4",
                          "text": "{0}{1} / [\"Count\"]"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1} / [\"Count\"]"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "NotRunning",
                    "formatter": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "SvcDisplayName",
                    "label": "Service"
                  },
                  {
                    "columnId": "Count",
                    "label": "Count"
                  },
                  {
                    "columnId": "Running",
                    "label": "Running"
                  },
                  {
                    "columnId": "NotRunning",
                    "label": "Not Running"
                  }
                ]
              }
            },
            "name": "query - 3",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//It will join with resources table and patchassessmentresources\r\n((resources //join of virtual machines, you can play with params as you see fit.\r\n//| extend TimeRange = {TimeRange}\r\n| where type =~ \"microsoft.compute/virtualmachines\"\r\n| where name !contains \"test\"\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| where properties.storageProfile.osDisk.osType in~ ('Linux','Windows')\r\n| extend conf = iff(properties.storageProfile.osDisk.osType =~ \"windows\", properties.osProfile.windowsConfiguration.patchSettings.patchMode, properties.osProfile.linuxConfiguration.patchSettings.patchMode)\r\n| extend os = tolower(tostring(properties.storageProfile.osDisk.osType))\r\n| extend id=tolower(id)\r\n| extend status=properties.extended.instanceView.powerState.displayStatus\r\n| extend imageRef = strcat(tolower(tostring(properties.storageProfile.imageReference.publisher)), \":\", tolower(tostring(properties.storageProfile.imageReference.offer)), \":\", tolower(tostring(properties.storageProfile.imageReference.sku)))\r\n// For marketplace images, check in the list of allow listed images for guest patching\r\n| extend isMarketplaceUnsupportedImageUsed = (isnotempty(properties.storageProfile.imageReference.publisher) and isnotempty(properties.storageProfile.imageReference.offer) and isnotempty(properties.storageProfile.imageReference.sku)) and\r\n    not(iff(os =~ \"windows\",\r\n        (imageRef in ('microsoftwindowsserver:microsoftserveroperatingsystems-previews:windows-server-vnext-azure-edition-core','microsoftwindowsserver:windowsserver:2008-r2-sp1','microsoftwindowsserver:windowsserver:2012-r2-datacenter','microsoftwindowsserver:windowsserver:2012-r2-datacenter-gensecond','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2016-datacenter','microsoftwindowsserver:windowsserver:2016-datacenter-gensecond','microsoftwindowsserver:windowsserver:2016-datacenter-server-core','microsoftwindowsserver:windowsserver:2016-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2016-datacenter-with-containers','microsoftwindowsserver:windowsserver:2019-datacenter','microsoftwindowsserver:windowsserver:2019-datacenter-core','microsoftwindowsserver:windowsserver:2019-datacenter-gensecond','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2019-datacenter-with-containers','microsoftwindowsserver:windowsserver:2022-datacenter','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-core','microsoftwindowsserver:windowsserver:2022-datacenter-core-g2','microsoftwindowsserver:windowsserver:2022-datacenter-g2','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserverhotpatch-previews:windows-server-2022-azure-edition-hotpatch','microsoftwindowsserver:microsoftserveroperatingsystems-previews:windows-server-2025-azure-edition-hotpatch','microsoftazuresiterecovery:process-server:windows-2012-r2-datacenter','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v4','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v5','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v6','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v7','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-u8','microsoftsqlserver:sql2016sp1-ws2016:standard','microsoftsqlserver:sql2016sp2-ws2016:standard','microsoftsqlserver:sql2017-ws2016:enterprise','microsoftsqlserver:sql2017-ws2016:standard','microsoftsqlserver:sql2019-ws2019:enterprise','microsoftsqlserver:sql2019-ws2019:sqldev','microsoftsqlserver:sql2019-ws2019:standard','microsoftsqlserver:sql2019-ws2019:standard-gen2','center-for-internet-security-inc:cis-windows-server-2016-v1-0-0-l1:cis-ws2016-l1','center-for-internet-security-inc:cis-windows-server-2016-v1-0-0-l2:cis-ws2016-l2','center-for-internet-security-inc:cis-windows-server-2019-v1-0-0-l1:cis-ws2019-l1','center-for-internet-security-inc:cis-windows-server-2019-v1-0-0-l2:cis-ws2019-l2','center-for-internet-security-inc:cis-win-2019-stig:cis-win-2019-stig','center-for-internet-security-inc:cis-windows-server:cis-windows-server2019-stig-gen1','center-for-internet-security-inc:cis-windows-server-2012-r2-v2-2-1-l2:cis-ws2012-r2-l2','cloud-infrastructure-services:servercore-2019:servercore-2019','cloud-infrastructure-services:hpc2019-windows-server-2019:hpc2019-windows-server-2019','cognosys:sql-server-2016-sp2-std-win2016-debug-utilities:sql-server-2016-sp2-std-win2016-debug-utilities','cloud-infrastructure-services:ad-dc-2016:ad-dc-2016','cloud-infrastructure-services:ad-dc-2019:ad-dc-2019','cloud-infrastructure-services:ad-dc-2022:ad-dc-2022','cloud-infrastructure-services:sftp-2016:sftp-2016','cloud-infrastructure-services:rds-farm-2019:rds-farm-2019','cloud-infrastructure-services:hmailserver:hmailserver-email-server-2016','veeam:office365backup:veeamoffice365backup') or imageRef matches regex 'microsoftwindowsserver:windowsserver:.*|microsoftbiztalkserver:biztalk-server:.*|microsoftdynamicsax:dynamics:.*|microsoftpowerbi:.*:.*|microsoftsharepoint:microsoftsharepointserver:.*|microsoftsqlserver:.*:.*|microsoftvisualstudio:visualstudio.*:.*-ws2012r2|microsoftvisualstudio:visualstudio.*:.*-ws2016|microsoftvisualstudio:visualstudio.*:.*-ws2019|microsoftvisualstudio:visualstudio.*:.*-ws2022|microsoftwindowsserver:windows-cvm:.*|microsoftwindowsserver:windowsserverdotnet:.*|microsoftwindowsserver:windowsserver-gen2preview:.*|microsoftwindowsserver:windowsserversemiannual:.*|microsoftwindowsserver:windowsserverupgrade:.*|microsoftwindowsserverhpcpack:windowsserverhpcpack:.*|microsoft-dsvm:dsvm-windows:.*|microsoft-dsvm:dsvm-win-2019:.*|microsoft-dsvm:dsvm-win-2022:.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2016-l.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2019-l.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2022-l.*|center-for-internet-security-inc:cis-windows-server-2022-l1:.*|center-for-internet-security-inc:cis-windows-server-2022-l2:.*|microsoft-ads:windows-data-science-vm:.*|filemagellc:filemage-gateway-vm-win:filemage-gateway-vm-win-.*|esri:arcgis-enterprise.*:byol.*|esri:pro-byol:pro-byol-.*|veeam:veeam-backup-replication:veeam-backup-replication-v.*|southrivertech1586314123192:tn-ent-payg:tnentpayg.*|belindaczsro1588885355210:belvmsrv01:belvmsrv.*|southrivertech1586314123192:tn-sftp-payg:tnsftppayg.*'),\r\n        not(imageRef in ('redhat:rhel-ha:81_gen2') or imageRef matches regex 'openlogic:centos:8.*|openlogic:centos-hpc:.*|microsoftsqlserver:sql2019-sles.*:.*|microsoftsqlserver:sql2019-rhel7:.*|microsoftsqlserver:sql2017-rhel7:.*|microsoft-ads:.*:.*|suse:sles-sap-15-.*-byos:gen.*') and\r\n            (imageRef in ('canonical:ubuntuserver:16.04-lts','canonical:ubuntuserver:16.04.0-lts','canonical:ubuntuserver:18.04-lts','canonical:ubuntuserver:18_04-lts-gen2','canonical:0001-com-ubuntu-pro-bionic:pro-18_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts-gen2','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts-gen2','canonical:0001-com-ubuntu-server-focal:20_04-lts','canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2','canonical:0001-com-ubuntu-server-jammy:22_04-lts','canonical:0001-com-ubuntu-server-jammy:22_04-lts-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-1','microsoftcblmariner:cbl-mariner:1-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-2','microsoftcblmariner:cbl-mariner:cbl-mariner-2-gen2','microsoft-aks:aks:aks-engine-ubuntu-1804-202112','microsoft-dsvm:aml-workstation:ubuntu-20','microsoft-dsvm:aml-workstation:ubuntu-20-gen2','openlogic:centos:7.2','openlogic:centos:7.3','openlogic:centos:7.4','openlogic:centos:7.5','openlogic:centos:7.6','openlogic:centos:7.7','openlogic:centos:7_8','openlogic:centos:7_9','openlogic:centos:7_9-gen2','openlogic:centos:8.0','openlogic:centos:8_1','openlogic:centos:8_2','openlogic:centos:8_3','openlogic:centos:8_4','openlogic:centos:8_5','openlogic:centos-lvm:7-lvm','openlogic:centos-lvm:8-lvm','redhat:rhel:7.2','redhat:rhel:7.3','redhat:rhel:7.4','redhat:rhel:7.5','redhat:rhel:7.6','redhat:rhel:7.7','redhat:rhel:7.8','redhat:rhel:7_9','redhat:rhel:7-lvm','redhat:rhel:7-raw','redhat:rhel:8','redhat:rhel:8.1','redhat:rhel:81gen2','redhat:rhel:8.2','redhat:rhel:82gen2','redhat:rhel:8_3','redhat:rhel:83-gen2','redhat:rhel:8_4','redhat:rhel:84-gen2','redhat:rhel:8_5','redhat:rhel:85-gen2','redhat:rhel:8_6','redhat:rhel:86-gen2','redhat:rhel:8_7','redhat:rhel:8_8','redhat:rhel:8-lvm','redhat:rhel:8-lvm-gen2','redhat:rhel-raw:8-raw','redhat:rhel-raw:8-raw-gen2','redhat:rhel:9_0','redhat:rhel:9_1','redhat:rhel:9-lvm','redhat:rhel:9-lvm-gen2','suse:sles-12-sp5:gen1','suse:sles-12-sp5:gen2','suse:sles-15-sp2:gen1','suse:sles-15-sp2:gen2','almalinux:almalinux-x86_64:8_7-gen2','almalinux:almalinux-hpc:8_6-hpc','almalinux:almalinux-hpc:8_6-hpc-gen2','aviatrix-systems:aviatrix-bundle-payg:aviatrix-enterprise-bundle-byol','aviatrix-systems:aviatrix-copilot:avx-cplt-byol-01','aviatrix-systems:aviatrix-copilot:avx-cplt-byol-02','aviatrix-systems:aviatrix-companion-gateway-v9:aviatrix-companion-gateway-v9','aviatrix-systems:aviatrix-companion-gateway-v10:aviatrix-companion-gateway-v10','aviatrix-systems:aviatrix-companion-gateway-v10:aviatrix-companion-gateway-v10u','aviatrix-systems:aviatrix-companion-gateway-v12:aviatrix-companion-gateway-v12','aviatrix-systems:aviatrix-companion-gateway-v13:aviatrix-companion-gateway-v13','aviatrix-systems:aviatrix-companion-gateway-v13:aviatrix-companion-gateway-v13u','aviatrix-systems:aviatrix-companion-gateway-v14:aviatrix-companion-gateway-v14','aviatrix-systems:aviatrix-companion-gateway-v14:aviatrix-companion-gateway-v14u','aviatrix-systems:aviatrix-companion-gateway-v16:aviatrix-companion-gateway-v16','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts','center-for-internet-security-inc:cis-rhel:cis-redhat7-l1-gen1','center-for-internet-security-inc:cis-rhel-7-l2:cis-rhel7-l2','center-for-internet-security-inc:cis-rhel-8-stig:cis-rhel-8-stig','center-for-internet-security-inc:cis-oracle-linux-8-l1:cis-oracle8-l1','center-for-internet-security-inc:cis-ubuntu:cis-ubuntu1804-l1','center-for-internet-security-inc:cis-ubuntu:cis-ubuntulinux2004-l1-gen1','center-for-internet-security-inc:cis-ubuntu-linux-1804-l1:cis-ubuntu1804-l1','center-for-internet-security-inc:cis-ubuntu-linux-2004-l1:cis-ubuntu2004-l1','center-for-internet-security-inc:cis-ubuntu-linux-2204-l1:cis-ubuntu-linux-2204-l1','center-for-internet-security-inc:cis-ubuntu-linux-2204-l1:cis-ubuntu-linux-2204-l1-gen2','cloud-infrastructure-services:dns-ubuntu-2004:dns-ubuntu-2004','cloud-infrastructure-services:squid-ubuntu-2004:squid-ubuntu-2004','cloud-infrastructure-services:load-balancer-nginx:load-balancer-nginx','cloudera:cloudera-centos-os:7_5','cncf-upstream:capi:ubuntu-1804-gen1','cncf-upstream:capi:ubuntu-2004-gen1','cncf-upstream:capi:ubuntu-2204-gen1','credativ:debian:9','credativ:debian:9-backports','debian:debian-10:10','debian:debian-10:10-gen2','debian:debian-10:10-backports','debian:debian-10:10-backports-gen2','debian:debian-10-daily:10','debian:debian-10-daily:10-gen2','debian:debian-10-daily:10-backports','debian:debian-10-daily:10-backports-gen2','debian:debian-11:11','debian:debian-11:11-gen2','debian:debian-11:11-backports','debian:debian-11:11-backports-gen2','debian:debian-11-daily:11','debian:debian-11-daily:11-gen2','debian:debian-11-daily:11-backports','debian:debian-11-daily:11-backports-gen2','erockyenterprisesoftwarefoundationinc1653071250513:rockylinux:free','erockyenterprisesoftwarefoundationinc1653071250513:rockylinux-9:rockylinux-9','github:github-enterprise:github-enterprise','matillion:matillion:matillion-etl-for-snowflake','microsoft-dsvm:aml-workstation:ubuntu','microsoft-dsvm:ubuntu-hpc:1804','microsoft-dsvm:ubuntu-hpc:2004-preview-ndv5','microsoft-dsvm:ubuntu-hpc:2004','microsoft-dsvm:ubuntu-hpc:2204-preview-ndv5','microsoft-dsvm:ubuntu-hpc:2204','microsoft-dsvm:ubuntu-1804:1804-gen2','microsoft-dsvm:ubuntu-2004:2004','microsoft-dsvm:ubuntu-2004:2004-gen2','netapp:netapp-oncommand-cloud-manager:occm-byol','nginxinc:nginx-plus-ent-v1:nginx-plus-ent-centos7','ntegralinc1586961136942:ntg_oracle_8_7:ntg_oracle_8_7','ntegralinc1586961136942:ntg_ubuntu_20_04_lts:ntg_ubuntu_20_04_lts','openlogic:centos-hpc:7.1','openlogic:centos-hpc:7.3','oracle:oracle-linux:8','oracle:oracle-linux:8-ci','oracle:oracle-linux:81','oracle:oracle-linux:81-ci','oracle:oracle-linux:81-gen2','oracle:oracle-linux:ol82','oracle:oracle-linux:ol8_2-gen2','oracle:oracle-linux:ol82-gen2','oracle:oracle-linux:ol83-lvm','oracle:oracle-linux:ol83-lvm-gen2','oracle:oracle-linux:ol84-lvm','oracle:oracle-linux:ol84-lvm-gen2','procomputers:almalinux-8-7:almalinux-8-7','procomputers:rhel-8-2:rhel-8-2','procomputers:rhel-8-8-gen2:rhel-8-8-gen2','procomputers:rhel-8-9-gen2:rhel-8-9-gen2','redhat:rhel:89-gen2','redhat:rhel-byos:rhel-raw76','redhat:rhel-byos:rhel-lvm88','redhat:rhel-byos:rhel-lvm88-gen2','redhat:rhel-byos:rhel-lvm92','redhat:rhel-byos:rhel-lvm-92-gen2','redhat:rhel-ha:9_2','redhat:rhel-ha:9_2-gen2','redhat:rhel-sap-apps:9_0','redhat:rhel-sap-apps:90sapapps-gen2','redhat:rhel-sap-apps:9_2','redhat:rhel-sap-apps:92sapapps-gen2','redhat:rhel-sap-ha:9_2','redhat:rhel-sap-ha:92sapha-gen2','openlogic:centos-ci:7-ci','openlogic:centos-lvm:7-lvm-gen2','oracle:oracle-database:oracle_db_21','oracle:oracle-database-19-3:oracle-database-19-0904','redhat:rhel-sap-ha:90sapha-gen2','suse:sles:12-sp4-gen2','suse:sles-15-sp2-basic:gen2','suse:sles-15-sp2-hpc:gen2','suse:sles-15-sp4-sapcal:gen1','suse:sles-byos:12-sp4','suse:sles-byos:12-sp4-gen2','suse:sles-sap:12-sp4','suse:sles-sap:12-sp4-gen2','suse:sles-sap-byos:12-sp4','suse:sles-sap-byos:12-sp4-gen2','suse:sles-sap-byos:gen2-12-sp4','suse:sles-sapcal:12-sp3','suse:sles-standard:12-sp4-gen2','suse:sles-sap-15-sp2-byos:gen2','talend:talend_re_image:tlnd_re','tenable:tenablecorewas:tenablecoreol8wasbyol','thorntechnologiesllc:sftpgateway:sftpgateway','zscaler:zscaler-private-access:zpa-con-azure') or imageRef matches regex 'almalinux:almalinux:8-gen.*|almalinux:almalinux:9-gen.*|almalinux:almalinux-x86_64:8-gen.*|almalinux:almalinux-x86_64:9-gen.*|canonical:.*:.*|center-for-internet-security-inc:cis-rhel:cis-redhat8-l.*-gen1|center-for-internet-security-inc:cis-rhel:cis-redhat9-l1-gen.*|center-for-internet-security-inc:cis-rhel-8-l.*:cis-rhel8-l.*|center-for-internet-security-inc:cis-rhel9-l1:cis-rhel9-l1.*|center-for-internet-security-inc:cis-ubuntu:cis-ubuntulinux2204-l1-gen.*|microsoftsqlserver:.*:.*|openlogic:centos:7.*|oracle:oracle-database-.*:18..*|oracle:oracle-linux:7.*|openlogic:centos:8.*|oracle:oracle-linux:ol7.*|oracle:oracle-linux:ol8.*|oracle:oracle-linux:ol9.*|redhat:rhel:7.*|redhat:rhel:8.*|redhat:rhel:9.*|redhat:rhel-byos:rhel-lvm7.*|redhat:rhel-byos:rhel-lvm8.*|redhat:rhel-ha:8.*|redhat:rhel-raw:7.*|redhat:rhel-raw:8.*|redhat:rhel-raw:9.*|redhat:rhel-sap:7.*|redhat:rhel-sap-apps:7.*|redhat:rhel-sap-apps:8.*|redhat:rhel-sap-.*:9_0|redhat:rhel-sap-ha:7.*|redhat:rhel-sap-ha:8.*|suse:opensuse-leap-15-.*:gen.*|suse:sles-12-sp5-.*:gen.*|oracle:oracle-linux:ol9-lvm.*|suse:sles-sap-12-sp5.*:gen.*|suse:sles-sap-15-.*:gen.*|suse:sle-hpc-15-sp4:gen.*|suse:sles-15-sp1-sapcal:gen.*|suse:sles-15-sp3-sapcal:gen.*|suse:sles-15-sp4:gen.*|suse:sles-15-sp4-basic:gen.*|suse:sle-hpc-15-sp4-byos:gen.*|suse:sle-hpc-15-sp5-byos:gen.*|suse:sle-hpc-15-sp5:gen.*|suse:sles-15-sp4-byos:gen.*|suse:sles-15-sp4-chost-byos:gen.*|suse:sles-15-sp4-hardened-byos:gen.*|suse:sles-15-sp5-basic:gen.*|suse:sles-15-sp5-byos:gen.*|suse:sles-15-sp5-chost-byos:gen.*|suse:sles-15-sp5-hardened-byos:gen.*|suse:sles-15-sp5-sapcal:gen.*|suse:sles-15-sp5:gen.*|suse:sles-sap-15-sp4-byos:gen.*|suse:sles-sap-15-sp4-hardened-byos:gen.*|suse:sles-sap-15-sp5-byos:gen.*|suse:sles-sap-15-sp5-hardened-byos:gen.*')))\r\n| project id, name, os, type, conf, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed)\r\n| union\r\n(resources //union with arc servers, you can play with params as you see fit.\r\n| where type =~ \"microsoft.hybridcompute/machines\"\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| extend id=tolower(id)\r\n| extend os=tolower(coalesce(tostring(properties.osName), tostring(properties.osType)))\r\n| where os in~ ('Linux', 'Windows')\r\n| extend status=properties.status\r\n| extend isMarketplaceUnsupportedImageUsed = false\r\n| project id, name, os, type, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed))\r\n| join kind=leftouter(\r\n    resources\r\n    | where type in~ (\"Microsoft.SqlVirtualMachine/sqlVirtualMachines\", \"microsoft.azurearcdata/sqlserverinstances\")\r\n    | project resourceId = iff(type =~ \"Microsoft.SqlVirtualMachine/sqlVirtualMachines\", tolower(properties.virtualMachineResourceId), tolower(properties.containerResourceId)), sqlType = type\r\n    | summarize by resourceId, sqlType\r\n) on $left.id == $right.resourceId\r\n| extend type = iff(isnotempty(sqlType), sqlType, type)\r\n| project-away sqlType, resourceId\r\n| where type in~ (\"microsoft.compute/virtualmachines\", \"microsoft.hybridcompute/machines\", \"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.azurearcdata/sqlserverinstances\") // Filtering by resource type\r\n| join kind=leftouter //finally, making a left outer join to fetch updates details from patchassessment\r\n((patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n| where properties.status =~ \"Succeeded\" or properties.status =~ \"Inprogress\" or (isnotnull(properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ \"Unsupported\"))\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend resourceId=tolower(resourceId)\r\n| project resourceId, assessProperties=properties))\r\non $left.id == $right.resourceId //join on resources id & patchassessment id that is parsed.\r\n| extend isUnsupported = isMarketplaceUnsupportedImageUsed or (isnotnull(assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ \"Unsupported\"))\r\n| summarize\r\ntotal = countif(1 == 1),\r\nnodata = countif((isnull(assessProperties) == true and not(isUnsupported)) or assessProperties.status =~ \"inprogress\"), // not(isUnsupported) condition is for removing unsupported machines.\r\npendingReboot = countif(isnotnull(assessProperties) and assessProperties.rebootPending == \"true\" and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\n//pendingUpdates - when any classification has > 0 updates\r\npendingUpdatesWindows = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Windows\" and (assessProperties.availablePatchCountByClassification.critical>0 or assessProperties.availablePatchCountByClassification.security>0 or assessProperties.availablePatchCountByClassification.updateRollup>0 or assessProperties.availablePatchCountByClassification.featurePack>0 or assessProperties.availablePatchCountByClassification.servicePack>0 or assessProperties.availablePatchCountByClassification.definition>0 or assessProperties.availablePatchCountByClassification.tools>0 or assessProperties.availablePatchCountByClassification.updates>0) and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\npendingUpdatesLinux = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Linux\" and (assessProperties.availablePatchCountByClassification.security>0 or assessProperties.availablePatchCountByClassification.other>0) and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\n//noPendingUpdates - when all classifications has 0 updates\r\nnoPendingUpdatesWindows = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Windows\" and (assessProperties.availablePatchCountByClassification.critical==0 and assessProperties.availablePatchCountByClassification.security==0 and assessProperties.availablePatchCountByClassification.updateRollup==0 and assessProperties.availablePatchCountByClassification.featurePack==0 and assessProperties.availablePatchCountByClassification.servicePack==0 and assessProperties.availablePatchCountByClassification.definition==0 and assessProperties.availablePatchCountByClassification.tools==0 and assessProperties.availablePatchCountByClassification.updates==0) and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\nnoPendingUpdatesLinux = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Linux\" and (assessProperties.availablePatchCountByClassification.security==0 and assessProperties.availablePatchCountByClassification.other==0) and not(isUnsupported or assessProperties.status =~ \"inprogress\")),\r\nunsupported = countif(isUnsupported and not(isnotnull(assessProperties) and assessProperties.status =~ \"inprogress\"))\r\n| project total, nodata, pendingReboot,pendingUpdates = pendingUpdatesWindows+pendingUpdatesLinux, noPendingUpdates = noPendingUpdatesWindows+noPendingUpdatesLinux, unsupported\r\n| project machinePack = pack(\"No pending updates\", noPendingUpdates, \"Pending updates\", pendingUpdates, \"Pending reboot\", pendingReboot,  \"No updates data\", nodata, \"Unsupported\",unsupported, \"Total machines\", total)\r\n| mv-expand machinePack\r\n| extend machine = tostring(bag_keys(machinePack)[0])\r\n| extend count_ = tolong(machinePack[machine])\r\n| project machine, count_ \r\n| where machine !=\"Total machines\"\r\n| where machine != \"Unsupported\"",
              "size": 4,
              "title": "Update Status",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "machine",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "sourceColumn": "count_",
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No pending updates",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Unsupported",
                          "representation": "1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Pending reboot",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No updates data",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Pending updates",
                          "representation": "1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "count_",
                    "formatter": 4,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "machine",
                    "label": "Status"
                  },
                  {
                    "columnId": "count_",
                    "label": "Count"
                  }
                ]
              },
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "machine",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "No updates data",
                    "color": "gray"
                  },
                  {
                    "seriesName": "Pending updates",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "Unsupported",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "No pending updates",
                    "color": "green"
                  },
                  {
                    "seriesName": "Pending reboot",
                    "color": "yellow"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                }
              }
            },
            "name": "query - 9 - Copy",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where id contains \"{ConfigMgrResourceGroup:label}\" or id contains \"{CMGResourceGroup:label}\"\r\n| extend joinId = tolower(id)\r\n| project joinId\r\n| join kind=inner \r\n(\r\npatchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches\")\r\n| extend id = tolower(id)\r\n| parse id with resourceId \"/patchassessmentresults\" *\r\n| extend joinId=tolower(resourceId)\r\n//| where isnotnull(properties.kbId)\r\n| extend MissingUpdate = tostring(properties.patchName)\r\n| extend Classification = tostring(properties.classifications[0])\r\n| project joinId, MissingUpdate, Classification\r\n) \r\non $left.joinId == $right.joinId\r\n| extend ComputerName = split(joinId,\"/\")[-1]\r\n| where ComputerName !contains \"test\"\r\n| summarize ComputerNames = make_set(ComputerName) by MissingUpdate, Classification\r\n| extend ComputerNames = strcat_array(ComputerNames,\", \")//| summarize Machines = count() by MissingUpdate, Classification\r\n//| order by Machines desc\r\n//| take 10\r\n//| extend TimeRange = {TimeRange}\r\n",
              "size": 3,
              "title": "Pending Updates",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "MissingUpdate",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "57.8571ch"
                    }
                  },
                  {
                    "columnMatch": "Classification",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "Machines",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 15,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "174px"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "MissingUpdate",
                    "label": "Update"
                  },
                  {
                    "columnId": "Classification",
                    "label": "Classification"
                  },
                  {
                    "columnId": "ComputerNames",
                    "label": "Computer Names"
                  }
                ]
              }
            },
            "name": "query - 10",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//It will join with resources table and patchassessmentresources\r\n((resources //join of virtual machines, you can play with params as you see fit.\r\n//| extend TimeRange = {TimeRange}\r\n| where type =~ \"microsoft.compute/virtualmachines\"\r\n| where name !contains \"test\"\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| where properties.storageProfile.osDisk.osType in~ ('Linux','Windows')\r\n| extend conf = iff(properties.storageProfile.osDisk.osType =~ \"windows\", properties.osProfile.windowsConfiguration.patchSettings.patchMode, properties.osProfile.linuxConfiguration.patchSettings.patchMode)\r\n| extend os = tolower(tostring(properties.storageProfile.osDisk.osType))\r\n| extend id=tolower(id)\r\n| extend status=properties.extended.instanceView.powerState.displayStatus\r\n| extend imageRef = strcat(tolower(tostring(properties.storageProfile.imageReference.publisher)), \":\", tolower(tostring(properties.storageProfile.imageReference.offer)), \":\", tolower(tostring(properties.storageProfile.imageReference.sku)))\r\n// For marketplace images, check in the list of allow listed images for guest patching\r\n| extend isMarketplaceUnsupportedImageUsed = (isnotempty(properties.storageProfile.imageReference.publisher) and isnotempty(properties.storageProfile.imageReference.offer) and isnotempty(properties.storageProfile.imageReference.sku)) and\r\n    not(iff(os =~ \"windows\",\r\n        (imageRef in ('microsoftwindowsserver:microsoftserveroperatingsystems-previews:windows-server-vnext-azure-edition-core','microsoftwindowsserver:windowsserver:2008-r2-sp1','microsoftwindowsserver:windowsserver:2012-r2-datacenter','microsoftwindowsserver:windowsserver:2012-r2-datacenter-gensecond','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2016-datacenter','microsoftwindowsserver:windowsserver:2016-datacenter-gensecond','microsoftwindowsserver:windowsserver:2016-datacenter-server-core','microsoftwindowsserver:windowsserver:2016-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2016-datacenter-with-containers','microsoftwindowsserver:windowsserver:2019-datacenter','microsoftwindowsserver:windowsserver:2019-datacenter-core','microsoftwindowsserver:windowsserver:2019-datacenter-gensecond','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2019-datacenter-with-containers','microsoftwindowsserver:windowsserver:2022-datacenter','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-core','microsoftwindowsserver:windowsserver:2022-datacenter-core-g2','microsoftwindowsserver:windowsserver:2022-datacenter-g2','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserverhotpatch-previews:windows-server-2022-azure-edition-hotpatch','microsoftwindowsserver:microsoftserveroperatingsystems-previews:windows-server-2025-azure-edition-hotpatch','microsoftazuresiterecovery:process-server:windows-2012-r2-datacenter','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v4','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v5','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v6','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v7','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-u8','microsoftsqlserver:sql2016sp1-ws2016:standard','microsoftsqlserver:sql2016sp2-ws2016:standard','microsoftsqlserver:sql2017-ws2016:enterprise','microsoftsqlserver:sql2017-ws2016:standard','microsoftsqlserver:sql2019-ws2019:enterprise','microsoftsqlserver:sql2019-ws2019:sqldev','microsoftsqlserver:sql2019-ws2019:standard','microsoftsqlserver:sql2019-ws2019:standard-gen2','center-for-internet-security-inc:cis-windows-server-2016-v1-0-0-l1:cis-ws2016-l1','center-for-internet-security-inc:cis-windows-server-2016-v1-0-0-l2:cis-ws2016-l2','center-for-internet-security-inc:cis-windows-server-2019-v1-0-0-l1:cis-ws2019-l1','center-for-internet-security-inc:cis-windows-server-2019-v1-0-0-l2:cis-ws2019-l2','center-for-internet-security-inc:cis-win-2019-stig:cis-win-2019-stig','center-for-internet-security-inc:cis-windows-server:cis-windows-server2019-stig-gen1','center-for-internet-security-inc:cis-windows-server-2012-r2-v2-2-1-l2:cis-ws2012-r2-l2','cloud-infrastructure-services:servercore-2019:servercore-2019','cloud-infrastructure-services:hpc2019-windows-server-2019:hpc2019-windows-server-2019','cognosys:sql-server-2016-sp2-std-win2016-debug-utilities:sql-server-2016-sp2-std-win2016-debug-utilities','cloud-infrastructure-services:ad-dc-2016:ad-dc-2016','cloud-infrastructure-services:ad-dc-2019:ad-dc-2019','cloud-infrastructure-services:ad-dc-2022:ad-dc-2022','cloud-infrastructure-services:sftp-2016:sftp-2016','cloud-infrastructure-services:rds-farm-2019:rds-farm-2019','cloud-infrastructure-services:hmailserver:hmailserver-email-server-2016','veeam:office365backup:veeamoffice365backup') or imageRef matches regex 'microsoftwindowsserver:windowsserver:.*|microsoftbiztalkserver:biztalk-server:.*|microsoftdynamicsax:dynamics:.*|microsoftpowerbi:.*:.*|microsoftsharepoint:microsoftsharepointserver:.*|microsoftsqlserver:.*:.*|microsoftvisualstudio:visualstudio.*:.*-ws2012r2|microsoftvisualstudio:visualstudio.*:.*-ws2016|microsoftvisualstudio:visualstudio.*:.*-ws2019|microsoftvisualstudio:visualstudio.*:.*-ws2022|microsoftwindowsserver:windows-cvm:.*|microsoftwindowsserver:windowsserverdotnet:.*|microsoftwindowsserver:windowsserver-gen2preview:.*|microsoftwindowsserver:windowsserversemiannual:.*|microsoftwindowsserver:windowsserverupgrade:.*|microsoftwindowsserverhpcpack:windowsserverhpcpack:.*|microsoft-dsvm:dsvm-windows:.*|microsoft-dsvm:dsvm-win-2019:.*|microsoft-dsvm:dsvm-win-2022:.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2016-l.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2019-l.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2022-l.*|center-for-internet-security-inc:cis-windows-server-2022-l1:.*|center-for-internet-security-inc:cis-windows-server-2022-l2:.*|microsoft-ads:windows-data-science-vm:.*|filemagellc:filemage-gateway-vm-win:filemage-gateway-vm-win-.*|esri:arcgis-enterprise.*:byol.*|esri:pro-byol:pro-byol-.*|veeam:veeam-backup-replication:veeam-backup-replication-v.*|southrivertech1586314123192:tn-ent-payg:tnentpayg.*|belindaczsro1588885355210:belvmsrv01:belvmsrv.*|southrivertech1586314123192:tn-sftp-payg:tnsftppayg.*'),\r\n        not(imageRef in ('redhat:rhel-ha:81_gen2') or imageRef matches regex 'openlogic:centos:8.*|openlogic:centos-hpc:.*|microsoftsqlserver:sql2019-sles.*:.*|microsoftsqlserver:sql2019-rhel7:.*|microsoftsqlserver:sql2017-rhel7:.*|microsoft-ads:.*:.*|suse:sles-sap-15-.*-byos:gen.*') and\r\n            (imageRef in ('canonical:ubuntuserver:16.04-lts','canonical:ubuntuserver:16.04.0-lts','canonical:ubuntuserver:18.04-lts','canonical:ubuntuserver:18_04-lts-gen2','canonical:0001-com-ubuntu-pro-bionic:pro-18_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts-gen2','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts-gen2','canonical:0001-com-ubuntu-server-focal:20_04-lts','canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2','canonical:0001-com-ubuntu-server-jammy:22_04-lts','canonical:0001-com-ubuntu-server-jammy:22_04-lts-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-1','microsoftcblmariner:cbl-mariner:1-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-2','microsoftcblmariner:cbl-mariner:cbl-mariner-2-gen2','microsoft-aks:aks:aks-engine-ubuntu-1804-202112','microsoft-dsvm:aml-workstation:ubuntu-20','microsoft-dsvm:aml-workstation:ubuntu-20-gen2','openlogic:centos:7.2','openlogic:centos:7.3','openlogic:centos:7.4','openlogic:centos:7.5','openlogic:centos:7.6','openlogic:centos:7.7','openlogic:centos:7_8','openlogic:centos:7_9','openlogic:centos:7_9-gen2','openlogic:centos:8.0','openlogic:centos:8_1','openlogic:centos:8_2','openlogic:centos:8_3','openlogic:centos:8_4','openlogic:centos:8_5','openlogic:centos-lvm:7-lvm','openlogic:centos-lvm:8-lvm','redhat:rhel:7.2','redhat:rhel:7.3','redhat:rhel:7.4','redhat:rhel:7.5','redhat:rhel:7.6','redhat:rhel:7.7','redhat:rhel:7.8','redhat:rhel:7_9','redhat:rhel:7-lvm','redhat:rhel:7-raw','redhat:rhel:8','redhat:rhel:8.1','redhat:rhel:81gen2','redhat:rhel:8.2','redhat:rhel:82gen2','redhat:rhel:8_3','redhat:rhel:83-gen2','redhat:rhel:8_4','redhat:rhel:84-gen2','redhat:rhel:8_5','redhat:rhel:85-gen2','redhat:rhel:8_6','redhat:rhel:86-gen2','redhat:rhel:8_7','redhat:rhel:8_8','redhat:rhel:8-lvm','redhat:rhel:8-lvm-gen2','redhat:rhel-raw:8-raw','redhat:rhel-raw:8-raw-gen2','redhat:rhel:9_0','redhat:rhel:9_1','redhat:rhel:9-lvm','redhat:rhel:9-lvm-gen2','suse:sles-12-sp5:gen1','suse:sles-12-sp5:gen2','suse:sles-15-sp2:gen1','suse:sles-15-sp2:gen2','almalinux:almalinux-x86_64:8_7-gen2','almalinux:almalinux-hpc:8_6-hpc','almalinux:almalinux-hpc:8_6-hpc-gen2','aviatrix-systems:aviatrix-bundle-payg:aviatrix-enterprise-bundle-byol','aviatrix-systems:aviatrix-copilot:avx-cplt-byol-01','aviatrix-systems:aviatrix-copilot:avx-cplt-byol-02','aviatrix-systems:aviatrix-companion-gateway-v9:aviatrix-companion-gateway-v9','aviatrix-systems:aviatrix-companion-gateway-v10:aviatrix-companion-gateway-v10','aviatrix-systems:aviatrix-companion-gateway-v10:aviatrix-companion-gateway-v10u','aviatrix-systems:aviatrix-companion-gateway-v12:aviatrix-companion-gateway-v12','aviatrix-systems:aviatrix-companion-gateway-v13:aviatrix-companion-gateway-v13','aviatrix-systems:aviatrix-companion-gateway-v13:aviatrix-companion-gateway-v13u','aviatrix-systems:aviatrix-companion-gateway-v14:aviatrix-companion-gateway-v14','aviatrix-systems:aviatrix-companion-gateway-v14:aviatrix-companion-gateway-v14u','aviatrix-systems:aviatrix-companion-gateway-v16:aviatrix-companion-gateway-v16','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts','center-for-internet-security-inc:cis-rhel:cis-redhat7-l1-gen1','center-for-internet-security-inc:cis-rhel-7-l2:cis-rhel7-l2','center-for-internet-security-inc:cis-rhel-8-stig:cis-rhel-8-stig','center-for-internet-security-inc:cis-oracle-linux-8-l1:cis-oracle8-l1','center-for-internet-security-inc:cis-ubuntu:cis-ubuntu1804-l1','center-for-internet-security-inc:cis-ubuntu:cis-ubuntulinux2004-l1-gen1','center-for-internet-security-inc:cis-ubuntu-linux-1804-l1:cis-ubuntu1804-l1','center-for-internet-security-inc:cis-ubuntu-linux-2004-l1:cis-ubuntu2004-l1','center-for-internet-security-inc:cis-ubuntu-linux-2204-l1:cis-ubuntu-linux-2204-l1','center-for-internet-security-inc:cis-ubuntu-linux-2204-l1:cis-ubuntu-linux-2204-l1-gen2','cloud-infrastructure-services:dns-ubuntu-2004:dns-ubuntu-2004','cloud-infrastructure-services:squid-ubuntu-2004:squid-ubuntu-2004','cloud-infrastructure-services:load-balancer-nginx:load-balancer-nginx','cloudera:cloudera-centos-os:7_5','cncf-upstream:capi:ubuntu-1804-gen1','cncf-upstream:capi:ubuntu-2004-gen1','cncf-upstream:capi:ubuntu-2204-gen1','credativ:debian:9','credativ:debian:9-backports','debian:debian-10:10','debian:debian-10:10-gen2','debian:debian-10:10-backports','debian:debian-10:10-backports-gen2','debian:debian-10-daily:10','debian:debian-10-daily:10-gen2','debian:debian-10-daily:10-backports','debian:debian-10-daily:10-backports-gen2','debian:debian-11:11','debian:debian-11:11-gen2','debian:debian-11:11-backports','debian:debian-11:11-backports-gen2','debian:debian-11-daily:11','debian:debian-11-daily:11-gen2','debian:debian-11-daily:11-backports','debian:debian-11-daily:11-backports-gen2','erockyenterprisesoftwarefoundationinc1653071250513:rockylinux:free','erockyenterprisesoftwarefoundationinc1653071250513:rockylinux-9:rockylinux-9','github:github-enterprise:github-enterprise','matillion:matillion:matillion-etl-for-snowflake','microsoft-dsvm:aml-workstation:ubuntu','microsoft-dsvm:ubuntu-hpc:1804','microsoft-dsvm:ubuntu-hpc:2004-preview-ndv5','microsoft-dsvm:ubuntu-hpc:2004','microsoft-dsvm:ubuntu-hpc:2204-preview-ndv5','microsoft-dsvm:ubuntu-hpc:2204','microsoft-dsvm:ubuntu-1804:1804-gen2','microsoft-dsvm:ubuntu-2004:2004','microsoft-dsvm:ubuntu-2004:2004-gen2','netapp:netapp-oncommand-cloud-manager:occm-byol','nginxinc:nginx-plus-ent-v1:nginx-plus-ent-centos7','ntegralinc1586961136942:ntg_oracle_8_7:ntg_oracle_8_7','ntegralinc1586961136942:ntg_ubuntu_20_04_lts:ntg_ubuntu_20_04_lts','openlogic:centos-hpc:7.1','openlogic:centos-hpc:7.3','oracle:oracle-linux:8','oracle:oracle-linux:8-ci','oracle:oracle-linux:81','oracle:oracle-linux:81-ci','oracle:oracle-linux:81-gen2','oracle:oracle-linux:ol82','oracle:oracle-linux:ol8_2-gen2','oracle:oracle-linux:ol82-gen2','oracle:oracle-linux:ol83-lvm','oracle:oracle-linux:ol83-lvm-gen2','oracle:oracle-linux:ol84-lvm','oracle:oracle-linux:ol84-lvm-gen2','procomputers:almalinux-8-7:almalinux-8-7','procomputers:rhel-8-2:rhel-8-2','procomputers:rhel-8-8-gen2:rhel-8-8-gen2','procomputers:rhel-8-9-gen2:rhel-8-9-gen2','redhat:rhel:89-gen2','redhat:rhel-byos:rhel-raw76','redhat:rhel-byos:rhel-lvm88','redhat:rhel-byos:rhel-lvm88-gen2','redhat:rhel-byos:rhel-lvm92','redhat:rhel-byos:rhel-lvm-92-gen2','redhat:rhel-ha:9_2','redhat:rhel-ha:9_2-gen2','redhat:rhel-sap-apps:9_0','redhat:rhel-sap-apps:90sapapps-gen2','redhat:rhel-sap-apps:9_2','redhat:rhel-sap-apps:92sapapps-gen2','redhat:rhel-sap-ha:9_2','redhat:rhel-sap-ha:92sapha-gen2','openlogic:centos-ci:7-ci','openlogic:centos-lvm:7-lvm-gen2','oracle:oracle-database:oracle_db_21','oracle:oracle-database-19-3:oracle-database-19-0904','redhat:rhel-sap-ha:90sapha-gen2','suse:sles:12-sp4-gen2','suse:sles-15-sp2-basic:gen2','suse:sles-15-sp2-hpc:gen2','suse:sles-15-sp4-sapcal:gen1','suse:sles-byos:12-sp4','suse:sles-byos:12-sp4-gen2','suse:sles-sap:12-sp4','suse:sles-sap:12-sp4-gen2','suse:sles-sap-byos:12-sp4','suse:sles-sap-byos:12-sp4-gen2','suse:sles-sap-byos:gen2-12-sp4','suse:sles-sapcal:12-sp3','suse:sles-standard:12-sp4-gen2','suse:sles-sap-15-sp2-byos:gen2','talend:talend_re_image:tlnd_re','tenable:tenablecorewas:tenablecoreol8wasbyol','thorntechnologiesllc:sftpgateway:sftpgateway','zscaler:zscaler-private-access:zpa-con-azure') or imageRef matches regex 'almalinux:almalinux:8-gen.*|almalinux:almalinux:9-gen.*|almalinux:almalinux-x86_64:8-gen.*|almalinux:almalinux-x86_64:9-gen.*|canonical:.*:.*|center-for-internet-security-inc:cis-rhel:cis-redhat8-l.*-gen1|center-for-internet-security-inc:cis-rhel:cis-redhat9-l1-gen.*|center-for-internet-security-inc:cis-rhel-8-l.*:cis-rhel8-l.*|center-for-internet-security-inc:cis-rhel9-l1:cis-rhel9-l1.*|center-for-internet-security-inc:cis-ubuntu:cis-ubuntulinux2204-l1-gen.*|microsoftsqlserver:.*:.*|openlogic:centos:7.*|oracle:oracle-database-.*:18..*|oracle:oracle-linux:7.*|openlogic:centos:8.*|oracle:oracle-linux:ol7.*|oracle:oracle-linux:ol8.*|oracle:oracle-linux:ol9.*|redhat:rhel:7.*|redhat:rhel:8.*|redhat:rhel:9.*|redhat:rhel-byos:rhel-lvm7.*|redhat:rhel-byos:rhel-lvm8.*|redhat:rhel-ha:8.*|redhat:rhel-raw:7.*|redhat:rhel-raw:8.*|redhat:rhel-raw:9.*|redhat:rhel-sap:7.*|redhat:rhel-sap-apps:7.*|redhat:rhel-sap-apps:8.*|redhat:rhel-sap-.*:9_0|redhat:rhel-sap-ha:7.*|redhat:rhel-sap-ha:8.*|suse:opensuse-leap-15-.*:gen.*|suse:sles-12-sp5-.*:gen.*|oracle:oracle-linux:ol9-lvm.*|suse:sles-sap-12-sp5.*:gen.*|suse:sles-sap-15-.*:gen.*|suse:sle-hpc-15-sp4:gen.*|suse:sles-15-sp1-sapcal:gen.*|suse:sles-15-sp3-sapcal:gen.*|suse:sles-15-sp4:gen.*|suse:sles-15-sp4-basic:gen.*|suse:sle-hpc-15-sp4-byos:gen.*|suse:sle-hpc-15-sp5-byos:gen.*|suse:sle-hpc-15-sp5:gen.*|suse:sles-15-sp4-byos:gen.*|suse:sles-15-sp4-chost-byos:gen.*|suse:sles-15-sp4-hardened-byos:gen.*|suse:sles-15-sp5-basic:gen.*|suse:sles-15-sp5-byos:gen.*|suse:sles-15-sp5-chost-byos:gen.*|suse:sles-15-sp5-hardened-byos:gen.*|suse:sles-15-sp5-sapcal:gen.*|suse:sles-15-sp5:gen.*|suse:sles-sap-15-sp4-byos:gen.*|suse:sles-sap-15-sp4-hardened-byos:gen.*|suse:sles-sap-15-sp5-byos:gen.*|suse:sles-sap-15-sp5-hardened-byos:gen.*')))\r\n| project id, name, os, type, conf, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed)\r\n| union\r\n(resources //union with arc servers, you can play with params as you see fit.\r\n| where type =~ \"microsoft.hybridcompute/machines\"\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| extend id=tolower(id)\r\n| extend os=tolower(coalesce(tostring(properties.osName), tostring(properties.osType)))\r\n| where os in~ ('Linux', 'Windows')\r\n| extend status=properties.status\r\n| extend isMarketplaceUnsupportedImageUsed = false\r\n| project id, name, os, type, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed))\r\n| join kind=leftouter(\r\n    resources\r\n    | where type in~ (\"Microsoft.SqlVirtualMachine/sqlVirtualMachines\", \"microsoft.azurearcdata/sqlserverinstances\")\r\n    | project resourceId = iff(type =~ \"Microsoft.SqlVirtualMachine/sqlVirtualMachines\", tolower(properties.virtualMachineResourceId), tolower(properties.containerResourceId)), sqlType = type\r\n    | summarize by resourceId, sqlType\r\n) on $left.id == $right.resourceId\r\n| extend type = iff(isnotempty(sqlType), sqlType, type)\r\n| project-away sqlType, resourceId\r\n| where type in~ (\"microsoft.compute/virtualmachines\", \"microsoft.hybridcompute/machines\", \"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.azurearcdata/sqlserverinstances\") // Filtering by resource type\r\n| join kind=leftouter //finally, making a left outer join to fetch updates details from patchassessment\r\n((patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n| where properties.status =~ \"Succeeded\" or properties.status =~ \"Inprogress\" or (isnotnull(properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ \"Unsupported\"))\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend resourceId=tolower(resourceId)\r\n| project resourceId, assessProperties=properties))\r\non $left.id == $right.resourceId //join on resources id & patchassessment id that is parsed.\r\n| extend isUnsupported = isMarketplaceUnsupportedImageUsed or (isnotnull(assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ \"Unsupported\"))\r\n//Pending Reboot\r\n//| where isnotnull(assessProperties) and assessProperties.rebootPending == \"false\" and not(isUnsupported or assessProperties.status =~ \"inprogress\")\r\n//no Updates data\r\n| where (isnull(assessProperties) == true and not(isUnsupported)) or assessProperties.status =~ \"inprogress\"\r\n| extend AssessmentMode = resourceProperties.osProfile.windowsConfiguration.patchSettings.assessmentMode\r\n| extend PeriodicAssessmentEnabled = case(AssessmentMode==\"AutomaticByPlatform\",\"True\",\"False\")\r\n| project id,status,PeriodicAssessmentEnabled",
              "size": 3,
              "title": "No Updates Data",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "VM running",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "PeriodicAssessmentEnabled",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "True",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "MissingUpdate",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "57.8571ch"
                    }
                  },
                  {
                    "columnMatch": "Classification",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "Machines",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 15,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "174px"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "Virtual Machine"
                  },
                  {
                    "columnId": "status",
                    "label": "VM Status"
                  },
                  {
                    "columnId": "PeriodicAssessmentEnabled",
                    "label": "Assessment Enabled"
                  }
                ]
              }
            },
            "name": "query - 10 - Copy",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//It will join with resources table and patchassessmentresources\r\n((resources //join of virtual machines, you can play with params as you see fit.\r\n//| extend TimeRange = {TimeRange}\r\n| where type =~ \"microsoft.compute/virtualmachines\"\r\n| where name !contains \"test\"\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| where properties.storageProfile.osDisk.osType in~ ('Linux','Windows')\r\n| extend conf = iff(properties.storageProfile.osDisk.osType =~ \"windows\", properties.osProfile.windowsConfiguration.patchSettings.patchMode, properties.osProfile.linuxConfiguration.patchSettings.patchMode)\r\n| extend os = tolower(tostring(properties.storageProfile.osDisk.osType))\r\n| extend id=tolower(id)\r\n| extend status=properties.extended.instanceView.powerState.displayStatus\r\n| extend imageRef = strcat(tolower(tostring(properties.storageProfile.imageReference.publisher)), \":\", tolower(tostring(properties.storageProfile.imageReference.offer)), \":\", tolower(tostring(properties.storageProfile.imageReference.sku)))\r\n// For marketplace images, check in the list of allow listed images for guest patching\r\n| extend isMarketplaceUnsupportedImageUsed = (isnotempty(properties.storageProfile.imageReference.publisher) and isnotempty(properties.storageProfile.imageReference.offer) and isnotempty(properties.storageProfile.imageReference.sku)) and\r\n    not(iff(os =~ \"windows\",\r\n        (imageRef in ('microsoftwindowsserver:microsoftserveroperatingsystems-previews:windows-server-vnext-azure-edition-core','microsoftwindowsserver:windowsserver:2008-r2-sp1','microsoftwindowsserver:windowsserver:2012-r2-datacenter','microsoftwindowsserver:windowsserver:2012-r2-datacenter-gensecond','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2016-datacenter','microsoftwindowsserver:windowsserver:2016-datacenter-gensecond','microsoftwindowsserver:windowsserver:2016-datacenter-server-core','microsoftwindowsserver:windowsserver:2016-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2016-datacenter-with-containers','microsoftwindowsserver:windowsserver:2019-datacenter','microsoftwindowsserver:windowsserver:2019-datacenter-core','microsoftwindowsserver:windowsserver:2019-datacenter-gensecond','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2019-datacenter-with-containers','microsoftwindowsserver:windowsserver:2022-datacenter','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-core','microsoftwindowsserver:windowsserver:2022-datacenter-core-g2','microsoftwindowsserver:windowsserver:2022-datacenter-g2','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserverhotpatch-previews:windows-server-2022-azure-edition-hotpatch','microsoftwindowsserver:microsoftserveroperatingsystems-previews:windows-server-2025-azure-edition-hotpatch','microsoftazuresiterecovery:process-server:windows-2012-r2-datacenter','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v4','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v5','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v6','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v7','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-u8','microsoftsqlserver:sql2016sp1-ws2016:standard','microsoftsqlserver:sql2016sp2-ws2016:standard','microsoftsqlserver:sql2017-ws2016:enterprise','microsoftsqlserver:sql2017-ws2016:standard','microsoftsqlserver:sql2019-ws2019:enterprise','microsoftsqlserver:sql2019-ws2019:sqldev','microsoftsqlserver:sql2019-ws2019:standard','microsoftsqlserver:sql2019-ws2019:standard-gen2','center-for-internet-security-inc:cis-windows-server-2016-v1-0-0-l1:cis-ws2016-l1','center-for-internet-security-inc:cis-windows-server-2016-v1-0-0-l2:cis-ws2016-l2','center-for-internet-security-inc:cis-windows-server-2019-v1-0-0-l1:cis-ws2019-l1','center-for-internet-security-inc:cis-windows-server-2019-v1-0-0-l2:cis-ws2019-l2','center-for-internet-security-inc:cis-win-2019-stig:cis-win-2019-stig','center-for-internet-security-inc:cis-windows-server:cis-windows-server2019-stig-gen1','center-for-internet-security-inc:cis-windows-server-2012-r2-v2-2-1-l2:cis-ws2012-r2-l2','cloud-infrastructure-services:servercore-2019:servercore-2019','cloud-infrastructure-services:hpc2019-windows-server-2019:hpc2019-windows-server-2019','cognosys:sql-server-2016-sp2-std-win2016-debug-utilities:sql-server-2016-sp2-std-win2016-debug-utilities','cloud-infrastructure-services:ad-dc-2016:ad-dc-2016','cloud-infrastructure-services:ad-dc-2019:ad-dc-2019','cloud-infrastructure-services:ad-dc-2022:ad-dc-2022','cloud-infrastructure-services:sftp-2016:sftp-2016','cloud-infrastructure-services:rds-farm-2019:rds-farm-2019','cloud-infrastructure-services:hmailserver:hmailserver-email-server-2016','veeam:office365backup:veeamoffice365backup') or imageRef matches regex 'microsoftwindowsserver:windowsserver:.*|microsoftbiztalkserver:biztalk-server:.*|microsoftdynamicsax:dynamics:.*|microsoftpowerbi:.*:.*|microsoftsharepoint:microsoftsharepointserver:.*|microsoftsqlserver:.*:.*|microsoftvisualstudio:visualstudio.*:.*-ws2012r2|microsoftvisualstudio:visualstudio.*:.*-ws2016|microsoftvisualstudio:visualstudio.*:.*-ws2019|microsoftvisualstudio:visualstudio.*:.*-ws2022|microsoftwindowsserver:windows-cvm:.*|microsoftwindowsserver:windowsserverdotnet:.*|microsoftwindowsserver:windowsserver-gen2preview:.*|microsoftwindowsserver:windowsserversemiannual:.*|microsoftwindowsserver:windowsserverupgrade:.*|microsoftwindowsserverhpcpack:windowsserverhpcpack:.*|microsoft-dsvm:dsvm-windows:.*|microsoft-dsvm:dsvm-win-2019:.*|microsoft-dsvm:dsvm-win-2022:.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2016-l.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2019-l.*|center-for-internet-security-inc:cis-windows-server:cis-windows-server2022-l.*|center-for-internet-security-inc:cis-windows-server-2022-l1:.*|center-for-internet-security-inc:cis-windows-server-2022-l2:.*|microsoft-ads:windows-data-science-vm:.*|filemagellc:filemage-gateway-vm-win:filemage-gateway-vm-win-.*|esri:arcgis-enterprise.*:byol.*|esri:pro-byol:pro-byol-.*|veeam:veeam-backup-replication:veeam-backup-replication-v.*|southrivertech1586314123192:tn-ent-payg:tnentpayg.*|belindaczsro1588885355210:belvmsrv01:belvmsrv.*|southrivertech1586314123192:tn-sftp-payg:tnsftppayg.*'),\r\n        not(imageRef in ('redhat:rhel-ha:81_gen2') or imageRef matches regex 'openlogic:centos:8.*|openlogic:centos-hpc:.*|microsoftsqlserver:sql2019-sles.*:.*|microsoftsqlserver:sql2019-rhel7:.*|microsoftsqlserver:sql2017-rhel7:.*|microsoft-ads:.*:.*|suse:sles-sap-15-.*-byos:gen.*') and\r\n            (imageRef in ('canonical:ubuntuserver:16.04-lts','canonical:ubuntuserver:16.04.0-lts','canonical:ubuntuserver:18.04-lts','canonical:ubuntuserver:18_04-lts-gen2','canonical:0001-com-ubuntu-pro-bionic:pro-18_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts-gen2','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts-gen2','canonical:0001-com-ubuntu-server-focal:20_04-lts','canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2','canonical:0001-com-ubuntu-server-jammy:22_04-lts','canonical:0001-com-ubuntu-server-jammy:22_04-lts-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-1','microsoftcblmariner:cbl-mariner:1-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-2','microsoftcblmariner:cbl-mariner:cbl-mariner-2-gen2','microsoft-aks:aks:aks-engine-ubuntu-1804-202112','microsoft-dsvm:aml-workstation:ubuntu-20','microsoft-dsvm:aml-workstation:ubuntu-20-gen2','openlogic:centos:7.2','openlogic:centos:7.3','openlogic:centos:7.4','openlogic:centos:7.5','openlogic:centos:7.6','openlogic:centos:7.7','openlogic:centos:7_8','openlogic:centos:7_9','openlogic:centos:7_9-gen2','openlogic:centos:8.0','openlogic:centos:8_1','openlogic:centos:8_2','openlogic:centos:8_3','openlogic:centos:8_4','openlogic:centos:8_5','openlogic:centos-lvm:7-lvm','openlogic:centos-lvm:8-lvm','redhat:rhel:7.2','redhat:rhel:7.3','redhat:rhel:7.4','redhat:rhel:7.5','redhat:rhel:7.6','redhat:rhel:7.7','redhat:rhel:7.8','redhat:rhel:7_9','redhat:rhel:7-lvm','redhat:rhel:7-raw','redhat:rhel:8','redhat:rhel:8.1','redhat:rhel:81gen2','redhat:rhel:8.2','redhat:rhel:82gen2','redhat:rhel:8_3','redhat:rhel:83-gen2','redhat:rhel:8_4','redhat:rhel:84-gen2','redhat:rhel:8_5','redhat:rhel:85-gen2','redhat:rhel:8_6','redhat:rhel:86-gen2','redhat:rhel:8_7','redhat:rhel:8_8','redhat:rhel:8-lvm','redhat:rhel:8-lvm-gen2','redhat:rhel-raw:8-raw','redhat:rhel-raw:8-raw-gen2','redhat:rhel:9_0','redhat:rhel:9_1','redhat:rhel:9-lvm','redhat:rhel:9-lvm-gen2','suse:sles-12-sp5:gen1','suse:sles-12-sp5:gen2','suse:sles-15-sp2:gen1','suse:sles-15-sp2:gen2','almalinux:almalinux-x86_64:8_7-gen2','almalinux:almalinux-hpc:8_6-hpc','almalinux:almalinux-hpc:8_6-hpc-gen2','aviatrix-systems:aviatrix-bundle-payg:aviatrix-enterprise-bundle-byol','aviatrix-systems:aviatrix-copilot:avx-cplt-byol-01','aviatrix-systems:aviatrix-copilot:avx-cplt-byol-02','aviatrix-systems:aviatrix-companion-gateway-v9:aviatrix-companion-gateway-v9','aviatrix-systems:aviatrix-companion-gateway-v10:aviatrix-companion-gateway-v10','aviatrix-systems:aviatrix-companion-gateway-v10:aviatrix-companion-gateway-v10u','aviatrix-systems:aviatrix-companion-gateway-v12:aviatrix-companion-gateway-v12','aviatrix-systems:aviatrix-companion-gateway-v13:aviatrix-companion-gateway-v13','aviatrix-systems:aviatrix-companion-gateway-v13:aviatrix-companion-gateway-v13u','aviatrix-systems:aviatrix-companion-gateway-v14:aviatrix-companion-gateway-v14','aviatrix-systems:aviatrix-companion-gateway-v14:aviatrix-companion-gateway-v14u','aviatrix-systems:aviatrix-companion-gateway-v16:aviatrix-companion-gateway-v16','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts','center-for-internet-security-inc:cis-rhel:cis-redhat7-l1-gen1','center-for-internet-security-inc:cis-rhel-7-l2:cis-rhel7-l2','center-for-internet-security-inc:cis-rhel-8-stig:cis-rhel-8-stig','center-for-internet-security-inc:cis-oracle-linux-8-l1:cis-oracle8-l1','center-for-internet-security-inc:cis-ubuntu:cis-ubuntu1804-l1','center-for-internet-security-inc:cis-ubuntu:cis-ubuntulinux2004-l1-gen1','center-for-internet-security-inc:cis-ubuntu-linux-1804-l1:cis-ubuntu1804-l1','center-for-internet-security-inc:cis-ubuntu-linux-2004-l1:cis-ubuntu2004-l1','center-for-internet-security-inc:cis-ubuntu-linux-2204-l1:cis-ubuntu-linux-2204-l1','center-for-internet-security-inc:cis-ubuntu-linux-2204-l1:cis-ubuntu-linux-2204-l1-gen2','cloud-infrastructure-services:dns-ubuntu-2004:dns-ubuntu-2004','cloud-infrastructure-services:squid-ubuntu-2004:squid-ubuntu-2004','cloud-infrastructure-services:load-balancer-nginx:load-balancer-nginx','cloudera:cloudera-centos-os:7_5','cncf-upstream:capi:ubuntu-1804-gen1','cncf-upstream:capi:ubuntu-2004-gen1','cncf-upstream:capi:ubuntu-2204-gen1','credativ:debian:9','credativ:debian:9-backports','debian:debian-10:10','debian:debian-10:10-gen2','debian:debian-10:10-backports','debian:debian-10:10-backports-gen2','debian:debian-10-daily:10','debian:debian-10-daily:10-gen2','debian:debian-10-daily:10-backports','debian:debian-10-daily:10-backports-gen2','debian:debian-11:11','debian:debian-11:11-gen2','debian:debian-11:11-backports','debian:debian-11:11-backports-gen2','debian:debian-11-daily:11','debian:debian-11-daily:11-gen2','debian:debian-11-daily:11-backports','debian:debian-11-daily:11-backports-gen2','erockyenterprisesoftwarefoundationinc1653071250513:rockylinux:free','erockyenterprisesoftwarefoundationinc1653071250513:rockylinux-9:rockylinux-9','github:github-enterprise:github-enterprise','matillion:matillion:matillion-etl-for-snowflake','microsoft-dsvm:aml-workstation:ubuntu','microsoft-dsvm:ubuntu-hpc:1804','microsoft-dsvm:ubuntu-hpc:2004-preview-ndv5','microsoft-dsvm:ubuntu-hpc:2004','microsoft-dsvm:ubuntu-hpc:2204-preview-ndv5','microsoft-dsvm:ubuntu-hpc:2204','microsoft-dsvm:ubuntu-1804:1804-gen2','microsoft-dsvm:ubuntu-2004:2004','microsoft-dsvm:ubuntu-2004:2004-gen2','netapp:netapp-oncommand-cloud-manager:occm-byol','nginxinc:nginx-plus-ent-v1:nginx-plus-ent-centos7','ntegralinc1586961136942:ntg_oracle_8_7:ntg_oracle_8_7','ntegralinc1586961136942:ntg_ubuntu_20_04_lts:ntg_ubuntu_20_04_lts','openlogic:centos-hpc:7.1','openlogic:centos-hpc:7.3','oracle:oracle-linux:8','oracle:oracle-linux:8-ci','oracle:oracle-linux:81','oracle:oracle-linux:81-ci','oracle:oracle-linux:81-gen2','oracle:oracle-linux:ol82','oracle:oracle-linux:ol8_2-gen2','oracle:oracle-linux:ol82-gen2','oracle:oracle-linux:ol83-lvm','oracle:oracle-linux:ol83-lvm-gen2','oracle:oracle-linux:ol84-lvm','oracle:oracle-linux:ol84-lvm-gen2','procomputers:almalinux-8-7:almalinux-8-7','procomputers:rhel-8-2:rhel-8-2','procomputers:rhel-8-8-gen2:rhel-8-8-gen2','procomputers:rhel-8-9-gen2:rhel-8-9-gen2','redhat:rhel:89-gen2','redhat:rhel-byos:rhel-raw76','redhat:rhel-byos:rhel-lvm88','redhat:rhel-byos:rhel-lvm88-gen2','redhat:rhel-byos:rhel-lvm92','redhat:rhel-byos:rhel-lvm-92-gen2','redhat:rhel-ha:9_2','redhat:rhel-ha:9_2-gen2','redhat:rhel-sap-apps:9_0','redhat:rhel-sap-apps:90sapapps-gen2','redhat:rhel-sap-apps:9_2','redhat:rhel-sap-apps:92sapapps-gen2','redhat:rhel-sap-ha:9_2','redhat:rhel-sap-ha:92sapha-gen2','openlogic:centos-ci:7-ci','openlogic:centos-lvm:7-lvm-gen2','oracle:oracle-database:oracle_db_21','oracle:oracle-database-19-3:oracle-database-19-0904','redhat:rhel-sap-ha:90sapha-gen2','suse:sles:12-sp4-gen2','suse:sles-15-sp2-basic:gen2','suse:sles-15-sp2-hpc:gen2','suse:sles-15-sp4-sapcal:gen1','suse:sles-byos:12-sp4','suse:sles-byos:12-sp4-gen2','suse:sles-sap:12-sp4','suse:sles-sap:12-sp4-gen2','suse:sles-sap-byos:12-sp4','suse:sles-sap-byos:12-sp4-gen2','suse:sles-sap-byos:gen2-12-sp4','suse:sles-sapcal:12-sp3','suse:sles-standard:12-sp4-gen2','suse:sles-sap-15-sp2-byos:gen2','talend:talend_re_image:tlnd_re','tenable:tenablecorewas:tenablecoreol8wasbyol','thorntechnologiesllc:sftpgateway:sftpgateway','zscaler:zscaler-private-access:zpa-con-azure') or imageRef matches regex 'almalinux:almalinux:8-gen.*|almalinux:almalinux:9-gen.*|almalinux:almalinux-x86_64:8-gen.*|almalinux:almalinux-x86_64:9-gen.*|canonical:.*:.*|center-for-internet-security-inc:cis-rhel:cis-redhat8-l.*-gen1|center-for-internet-security-inc:cis-rhel:cis-redhat9-l1-gen.*|center-for-internet-security-inc:cis-rhel-8-l.*:cis-rhel8-l.*|center-for-internet-security-inc:cis-rhel9-l1:cis-rhel9-l1.*|center-for-internet-security-inc:cis-ubuntu:cis-ubuntulinux2204-l1-gen.*|microsoftsqlserver:.*:.*|openlogic:centos:7.*|oracle:oracle-database-.*:18..*|oracle:oracle-linux:7.*|openlogic:centos:8.*|oracle:oracle-linux:ol7.*|oracle:oracle-linux:ol8.*|oracle:oracle-linux:ol9.*|redhat:rhel:7.*|redhat:rhel:8.*|redhat:rhel:9.*|redhat:rhel-byos:rhel-lvm7.*|redhat:rhel-byos:rhel-lvm8.*|redhat:rhel-ha:8.*|redhat:rhel-raw:7.*|redhat:rhel-raw:8.*|redhat:rhel-raw:9.*|redhat:rhel-sap:7.*|redhat:rhel-sap-apps:7.*|redhat:rhel-sap-apps:8.*|redhat:rhel-sap-.*:9_0|redhat:rhel-sap-ha:7.*|redhat:rhel-sap-ha:8.*|suse:opensuse-leap-15-.*:gen.*|suse:sles-12-sp5-.*:gen.*|oracle:oracle-linux:ol9-lvm.*|suse:sles-sap-12-sp5.*:gen.*|suse:sles-sap-15-.*:gen.*|suse:sle-hpc-15-sp4:gen.*|suse:sles-15-sp1-sapcal:gen.*|suse:sles-15-sp3-sapcal:gen.*|suse:sles-15-sp4:gen.*|suse:sles-15-sp4-basic:gen.*|suse:sle-hpc-15-sp4-byos:gen.*|suse:sle-hpc-15-sp5-byos:gen.*|suse:sle-hpc-15-sp5:gen.*|suse:sles-15-sp4-byos:gen.*|suse:sles-15-sp4-chost-byos:gen.*|suse:sles-15-sp4-hardened-byos:gen.*|suse:sles-15-sp5-basic:gen.*|suse:sles-15-sp5-byos:gen.*|suse:sles-15-sp5-chost-byos:gen.*|suse:sles-15-sp5-hardened-byos:gen.*|suse:sles-15-sp5-sapcal:gen.*|suse:sles-15-sp5:gen.*|suse:sles-sap-15-sp4-byos:gen.*|suse:sles-sap-15-sp4-hardened-byos:gen.*|suse:sles-sap-15-sp5-byos:gen.*|suse:sles-sap-15-sp5-hardened-byos:gen.*')))\r\n| project id, name, os, type, conf, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed)\r\n| union\r\n(resources //union with arc servers, you can play with params as you see fit.\r\n| where type =~ \"microsoft.hybridcompute/machines\"\r\n| where resourceGroup =~ \"{ConfigMgrResourceGroup:label}\" or resourceGroup =~ \"{CMGResourceGroup:label}\"\r\n| extend id=tolower(id)\r\n| extend os=tolower(coalesce(tostring(properties.osName), tostring(properties.osType)))\r\n| where os in~ ('Linux', 'Windows')\r\n| extend status=properties.status\r\n| extend isMarketplaceUnsupportedImageUsed = false\r\n| project id, name, os, type, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed))\r\n| join kind=leftouter(\r\n    resources\r\n    | where type in~ (\"Microsoft.SqlVirtualMachine/sqlVirtualMachines\", \"microsoft.azurearcdata/sqlserverinstances\")\r\n    | project resourceId = iff(type =~ \"Microsoft.SqlVirtualMachine/sqlVirtualMachines\", tolower(properties.virtualMachineResourceId), tolower(properties.containerResourceId)), sqlType = type\r\n    | summarize by resourceId, sqlType\r\n) on $left.id == $right.resourceId\r\n| extend type = iff(isnotempty(sqlType), sqlType, type)\r\n| project-away sqlType, resourceId\r\n| where type in~ (\"microsoft.compute/virtualmachines\", \"microsoft.hybridcompute/machines\", \"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.azurearcdata/sqlserverinstances\") // Filtering by resource type\r\n| join kind=leftouter //finally, making a left outer join to fetch updates details from patchassessment\r\n((patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n| where properties.status =~ \"Succeeded\" or properties.status =~ \"Inprogress\" or (isnotnull(properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ \"Unsupported\"))\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend resourceId=tolower(resourceId)\r\n| project resourceId, assessProperties=properties))\r\non $left.id == $right.resourceId //join on resources id & patchassessment id that is parsed.\r\n| extend isUnsupported = isMarketplaceUnsupportedImageUsed or (isnotnull(assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ \"Unsupported\"))\r\n//Pending Reboot\r\n| where isnotnull(assessProperties) and assessProperties.rebootPending == \"true\" and not(isUnsupported or assessProperties.status =~ \"inprogress\")\r\n| extend lastassessment = todatetime(assessProperties.startDateTime)\r\n| project id,lastassessment",
              "size": 3,
              "title": "Pending Reboot",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "lastassessment",
                    "formatter": 6
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "Virtual Machine"
                  },
                  {
                    "columnId": "lastassessment",
                    "label": "Last Assessment"
                  }
                ]
              }
            },
            "name": "query - 10 - Copy - Copy",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "VirtualMachines"
      },
      "customWidth": "50",
      "name": "Updates Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureHealthQuery/1.0\",\"queryType\":\"Detailed\"}",
              "size": 3,
              "title": "Storage Account Health",
              "queryType": 4,
              "resourceType": "microsoft.storage/storageaccounts",
              "crossComponentResources": [
                "{StorageAccount}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Availability state",
                    "formatter": 11
                  },
                  {
                    "columnMatch": "Detailed status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Occurred time",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Reason chronicity",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Reason type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Summary",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "89.2857ch"
                    }
                  },
                  {
                    "columnMatch": "Title",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Resource group",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 5
                  }
                ]
              }
            },
            "name": "query - 8"
          },
          {
            "type": 10,
            "content": {
              "chartId": "workbook28fd9060-d314-48f5-bf8c-6922a11b7f38",
              "version": "MetricsItem/2.0",
              "size": 3,
              "chartType": -1,
              "resourceType": "microsoft.storage/storageaccounts",
              "metricScope": 0,
              "resourceParameter": "StorageAccount",
              "resourceIds": [
                "{StorageAccount}"
              ],
              "timeContextFromParameter": "TimeRange",
              "timeContext": {
                "durationMs": 0
              },
              "metrics": [
                {
                  "namespace": "microsoft.storage/storageaccounts",
                  "metric": "microsoft.storage/storageaccounts-Transaction-Availability",
                  "aggregation": 4
                },
                {
                  "namespace": "microsoft.storage/storageaccounts/blobservices",
                  "metric": "microsoft.storage/storageaccounts/blobservices-Transaction-Availability",
                  "aggregation": 4
                },
                {
                  "namespace": "microsoft.storage/storageaccounts/fileservices",
                  "metric": "microsoft.storage/storageaccounts/fileservices-Transaction-Availability",
                  "aggregation": 4
                },
                {
                  "namespace": "microsoft.storage/storageaccounts/queueservices",
                  "metric": "microsoft.storage/storageaccounts/queueservices-Transaction-Availability",
                  "aggregation": 4
                },
                {
                  "namespace": "microsoft.storage/storageaccounts/tableservices",
                  "metric": "microsoft.storage/storageaccounts/tableservices-Transaction-Availability",
                  "aggregation": 4
                }
              ],
              "title": "Storage Account Availability (24 hours)",
              "gridFormatType": 1,
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Namespace",
                  "formatter": 13,
                  "formatOptions": {
                    "linkTarget": null,
                    "showIcon": false
                  }
                },
                "subtitleContent": {
                  "columnMatch": "Metric"
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 90,
                    "max": 99,
                    "palette": "redGreen"
                  },
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": false
              },
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Subscription",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource"
                    }
                  },
                  {
                    "columnMatch": "Metric",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Aggregation",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Value",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Timeline",
                    "formatter": 9
                  }
                ],
                "rowLimit": 10000
              }
            },
            "name": "metric - 7"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "StorageBlobLogs\r\n| union StorageQueueLogs\r\n| union StorageTableLogs\r\n| union StorageFileLogs\r\n| where AccountName =~ \"{StorageAccount:label}\" \r\n| where StatusText != \"Success\"\r\n| extend Service = ServiceType\r\n| extend AuthType = AuthenticationType\r\n| extend CallerIpAddress = split(CallerIpAddress, \":\")[0]\r\n| summarize ErrorCount = count() by Service, OperationName, StatusText, StatusCode, AuthType, tostring(CallerIpAddress), Uri\r\n| sort by ErrorCount desc",
              "size": 3,
              "title": "Storage Account Errors (24 hours)",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "ErrorCount",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "red"
                    }
                  }
                ]
              }
            },
            "name": "query - 9"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "StorageAccount"
      },
      "name": "Storage Account Group",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//CMG VMSS Status\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"CloudMgr.log\"\r\n| where RawData contains \"VMSS\" and RawData contains \"vmPowerState\"\r\n| extend VMSSName = extract(\"VMSS (.*?) instance\", 1, RawData)\r\n| extend VMSSInstance = extract(\"<name type=\\\"string\\\">(.*?)</name>\", 1, RawData)\r\n| extend PowerState = extract(\"vmPowerState is: PowerState/(.*?) \", 1, RawData)\r\n| extend ProvisioningState = extract(\"provisioning state: ProvisioningState/(.*?)~~\", 1, RawData)\r\n| summarize arg_max(TimeGenerated,*) by VMSSName,VMSSInstance\r\n| extend PowerState = strcat(toupper(substring(PowerState, 0, 1)), tolower(substring(PowerState, 1)))\r\n| extend ProvisioningState = strcat(toupper(substring(ProvisioningState, 0, 1)), tolower(substring(ProvisioningState, 1)))\r\n| extend VMSSName = toupper(VMSSName)\r\n| extend VMSSInstance = toupper(VMSSInstance)\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend LastStatusUpdateMinutes = toint(TimeFromNow / 1m)\r\n| project VMSSName,VMSSInstance,LastStatusUpdateMinutes,PowerState,ProvisioningState",
                    "size": 3,
                    "title": "CMG Scale Set Status (CloudMgr.log)",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "VMSSName",
                          "formatter": 5,
                          "formatOptions": {
                            "customColumnWidthSetting": "16ch"
                          }
                        },
                        {
                          "columnMatch": "VMSSInstance",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "20.1429ch"
                          }
                        },
                        {
                          "columnMatch": "LastStatusUpdateMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "15",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "16.8571ch"
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "PowerState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "Running",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "16ch"
                          }
                        },
                        {
                          "columnMatch": "ProvisioningState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "Succeeded",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "23ch"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "VMSSName",
                          "label": "Name"
                        },
                        {
                          "columnId": "VMSSInstance",
                          "label": "Instance"
                        },
                        {
                          "columnId": "LastStatusUpdateMinutes",
                          "label": "Last Update"
                        },
                        {
                          "columnId": "PowerState",
                          "label": "Power State"
                        },
                        {
                          "columnId": "ProvisioningState",
                          "label": "Provisioning State"
                        }
                      ]
                    }
                  },
                  "name": "Scale Set Status",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName contains \"CMGService.log\"\r\n| where RawData contains \"Summary - \"\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| parse RawData with * \"TotalRequestCount: \" TotalRequestCount:int \" TotalRequestSize: \" TotalRequestSizeBytes:int *\r\n| parse RawData with * \"TotalResponseCount: \" TotalResponseCount:int \" TotalResponseSize: \" TotalResponseSizeBytes:int *\r\n| parse RawData with * \"AverageElapsedTime: \" AverageElapsedTime_ms:int *\r\n| parse RawData with * \"ProcessingRate: \" ProcessingRate_RequestsPerSecond:real *\r\n| parse RawData with * \"$$<CMGService><\" DateTimeString:string \".\" *\r\n| project TimeGenerated,DateTimeString,Computer,FileName,TotalRequestCount,TotalRequestSizeBytes,TotalResponseCount,TotalResponseSizeBytes,AverageElapsedTime_ms,ProcessingRate_RequestsPerSecond\r\n| extend CMGNode=tostring(split(FileName,\"-\")[2])\r\n| summarize RequestCount=round(sum(TotalRequestCount),0),round(ResponseCount=sum(TotalResponseCount),0),round(RequestSizeBytes=sum(TotalRequestSizeBytes),0),round(ResponseSizeBytes=sum(TotalResponseSizeBytes),0),round(AverageElapsedTime_ms=avg(AverageElapsedTime_ms),0),round(ProcessingRate_RequestsPerSecond=avg(ProcessingRate_RequestsPerSecond),0) by bin(TimeGenerated,1m),CMGNode\r\n| summarize arg_max(TimeGenerated,*) by CMGNode\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend LastSummaryMinutes = toint(TimeFromNow / 1m)\r\n//Response count should be no less than 30% of request count\r\n| extend ResponseCountThreshold = RequestCount * 0.7\r\n| project CMGNode,LastSummaryMinutes,RequestCount,ResponseCount,AverageElapsedTime_ms,ResponseCountThreshold",
                    "size": 3,
                    "title": "Service Summary (CMGService.log)",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "CMGNode",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "21ch"
                          }
                        },
                        {
                          "columnMatch": "LastSummaryMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "15",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "16.8571ch"
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "RequestCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "<",
                                "thresholdValue": "1",
                                "representation": "4",
                                "text": "[\"RequestCount\"] / [\"ResponseCount\"]"
                              },
                              {
                                "sourceColumn": "ResponseCount",
                                "operator": "<",
                                "thresholdValue": "[\"ResponseCountThreshold\"]",
                                "representation": "4",
                                "text": "[\"RequestCount\"] / [\"ResponseCount\"]"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "[\"RequestCount\"] / [\"ResponseCount\"]"
                              }
                            ],
                            "customColumnWidthSetting": "22.1429ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "ResponseCount",
                          "formatter": 5,
                          "formatOptions": {
                            "customColumnWidthSetting": "19.7143ch"
                          }
                        },
                        {
                          "columnMatch": "AverageElapsedTime_ms",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">=",
                                "thresholdValue": "300000",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "13.8571ch"
                          },
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 0
                            }
                          }
                        },
                        {
                          "columnMatch": "ResponseCountThreshold",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "CMGNode",
                          "label": "CMG Node"
                        },
                        {
                          "columnId": "LastSummaryMinutes",
                          "label": "Last Update"
                        },
                        {
                          "columnId": "RequestCount",
                          "label": "Request/Response"
                        },
                        {
                          "columnId": "ResponseCount",
                          "label": "Response Count"
                        },
                        {
                          "columnId": "AverageElapsedTime_ms",
                          "label": "Avg Time"
                        }
                      ]
                    }
                  },
                  "name": "query - 11",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "W3CIISLog\r\n| where _ResourceId contains \"{CMGResourceGroup}\"\r\n| where cIP != \"::1\"\r\n| where csUriStem contains \"/SMS_MP/.sms_aut\"\r\n| extend IP = split(cIP,\".\")\r\n| extend IP = strcat(IP[0],\".\",IP[1],\".xxx.xxx\")\r\n| summarize Count=count() by RemoteIPCountry,RemoteIPLatitude,RemoteIPLongitude,IP\r\n| order by Count desc",
                    "size": 0,
                    "title": "SMS_MP Connections by Location (IIS Logs)",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "map",
                    "gridSettings": {
                      "filter": true
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "IP",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "Count",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "group": "IP",
                      "createOtherGroup": 10,
                      "showMetrics": false,
                      "showLegend": true
                    },
                    "mapSettings": {
                      "locInfo": "LatLong",
                      "latitude": "RemoteIPLatitude",
                      "longitude": "RemoteIPLongitude",
                      "sizeSettings": "Count",
                      "sizeAggregation": "Sum",
                      "minData": 0,
                      "labelSettings": "IP",
                      "legendMetric": "Count",
                      "numberOfMetrics": 100,
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "nodeColorField": "Count",
                        "colorAggregation": "Count",
                        "type": "heatmap",
                        "heatmapPalette": "yellowOrangeRed"
                      }
                    }
                  },
                  "name": "query - 7 - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "customWidth": "40",
            "name": "Left Column"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "CMG Service Requests (CMGService.log)",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName contains \"CMGService.log\"\r\n| where RawData contains \"Summary - \"\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| parse RawData with * \"TotalRequestCount: \" TotalRequestCount:int \" TotalRequestSize: \" TotalRequestSizeBytes:int *\r\n| parse RawData with * \"TotalResponseCount: \" TotalResponseCount:int \" TotalResponseSize: \" TotalResponseSizeBytes:int *\r\n| parse RawData with * \"AverageElapsedTime: \" AverageElapsedTime_ms:int *\r\n| parse RawData with * \"ProcessingRate: \" ProcessingRate_RequestsPerSecond:real *\r\n| parse RawData with * \"$$<CMGService><\" DateTimeString:string \".\" *\r\n| project TimeGenerated,DateTimeString,Computer,FileName,TotalRequestCount,TotalRequestSizeBytes,TotalResponseCount,TotalResponseSizeBytes,AverageElapsedTime_ms,ProcessingRate_RequestsPerSecond\r\n| extend CMGNode=tostring(split(FileName,\"-\")[2])\r\n| summarize RequestCount=round(sum(TotalRequestCount),0),round(ResponseCount=sum(TotalResponseCount),0),round(RequestSizeBytes=sum(TotalRequestSizeBytes),0),round(ResponseSizeBytes=sum(TotalResponseSizeBytes),0),round(AverageElapsedTime_ms=avg(AverageElapsedTime_ms),0),round(ProcessingRate_RequestsPerSecond=avg(ProcessingRate_RequestsPerSecond),0) by bin(TimeGenerated,1m),CMGNode\r\n| summarize RequestCount=sum(RequestCount),ResponseCount=sum(ResponseCount) by bin(TimeGenerated,15m)\r\n\r\n",
                          "size": 1,
                          "aggregation": 5,
                          "title": "Request / Response Count",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "showMetrics": false,
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "RequestCount",
                                "label": "Request Count"
                              },
                              {
                                "seriesName": "ResponseCount",
                                "label": "Response Count"
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 0",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName contains \"CMGService.log\"\r\n| where RawData contains \"Summary - \"\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| parse RawData with * \"TotalRequestCount: \" TotalRequestCount:int \" TotalRequestSize: \" TotalRequestSizeBytes:int *\r\n| parse RawData with * \"TotalResponseCount: \" TotalResponseCount:int \" TotalResponseSize: \" TotalResponseSizeBytes:int *\r\n| parse RawData with * \"AverageElapsedTime: \" AverageElapsedTime_ms:int *\r\n| parse RawData with * \"ProcessingRate: \" ProcessingRate_RequestsPerSecond:real *\r\n| parse RawData with * \"$$<CMGService><\" DateTimeString:string \".\" *\r\n| project TimeGenerated,DateTimeString,Computer,FileName,TotalRequestCount,TotalRequestSizeBytes,TotalResponseCount,TotalResponseSizeBytes,AverageElapsedTime_ms,ProcessingRate_RequestsPerSecond\r\n| extend CMGNode=tostring(split(FileName,\"-\")[2])\r\n//| summarize RequestCount=round(avg(TotalRequestCount),0),round(ResponseCount=avg(TotalResponseCount),0),round(RequestSizeBytes=avg(TotalRequestSizeBytes),0),round(ResponseSizeBytes=avg(TotalResponseSizeBytes),0),round(AverageElapsedTime_ms=avg(AverageElapsedTime_ms),0),round(ProcessingRate_RequestsPerSecond=avg(ProcessingRate_RequestsPerSecond),0) by bin(TimeGenerated,1m),CMGNode\r\n| summarize round(RequestSizeBytes=sum(TotalRequestSizeBytes),0),round(ResponseSizeBytes=sum(TotalResponseSizeBytes),0) by bin(TimeGenerated,15m)\r\n\r\n\r\n",
                          "size": 1,
                          "aggregation": 5,
                          "title": "Request / Response Size",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "gridSettings": {
                            "sortBy": [
                              {
                                "itemKey": "TimeGenerated",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "TimeGenerated",
                              "sortOrder": 2
                            }
                          ],
                          "chartSettings": {
                            "showMetrics": false,
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "RequestSizeBytes",
                                "label": "Request Size"
                              },
                              {
                                "seriesName": "ResponseSizeBytes",
                                "label": "Response Size"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 2,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 1",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName contains \"CMGService.log\"\r\n| where RawData contains \"Summary - \"\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| parse RawData with * \"TotalRequestCount: \" TotalRequestCount:int \" TotalRequestSize: \" TotalRequestSizeBytes:int *\r\n| parse RawData with * \"TotalResponseCount: \" TotalResponseCount:int \" TotalResponseSize: \" TotalResponseSizeBytes:int *\r\n| parse RawData with * \"AverageElapsedTime: \" AverageElapsedTime_ms:int *\r\n| parse RawData with * \"ProcessingRate: \" ProcessingRate_RequestsPerSecond:real *\r\n| parse RawData with * \"$$<CMGService><\" DateTimeString:string \".\" *\r\n| project TimeGenerated,DateTimeString,Computer,FileName,TotalRequestCount,TotalRequestSizeBytes,TotalResponseCount,TotalResponseSizeBytes,AverageElapsedTime_ms,ProcessingRate_RequestsPerSecond\r\n| extend CMGNode=tostring(split(FileName,\"-\")[2])\r\n//| summarize RequestCount=round(avg(TotalRequestCount),0),round(ResponseCount=avg(TotalResponseCount),0),round(RequestSizeBytes=avg(TotalRequestSizeBytes),0),round(ResponseSizeBytes=avg(TotalResponseSizeBytes),0),round(AverageElapsedTime_ms=avg(AverageElapsedTime_ms),0),round(ProcessingRate_RequestsPerSecond=avg(ProcessingRate_RequestsPerSecond),0) by bin(TimeGenerated,1m),CMGNode\r\n| summarize round(AverageElapsedTime_ms=avg(AverageElapsedTime_ms),0) by bin(TimeGenerated,1m)\r\n\r\n\r\n",
                          "size": 1,
                          "aggregation": 5,
                          "title": "Average Request Time",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "gridSettings": {
                            "sortBy": [
                              {
                                "itemKey": "TimeGenerated",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "TimeGenerated",
                              "sortOrder": 2
                            }
                          ],
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "AverageElapsedTime_ms",
                                "label": "Avg Request Time"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true
                                }
                              }
                            }
                          }
                        },
                        "name": "query - 1 - Copy",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "name": "CMG Service Group",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "SMS_MP Connections (IIS Logs)",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "W3CIISLog\r\n| where _ResourceId contains \"{CMGResourceGroup}\"\r\n| where cIP != \"::1\"\r\n| where csUriStem contains \"/SMS_MP/.sms_aut\"\r\n| project TimeGenerated,Computer,cIP,scStatus,scBytes,csBytes,TimeTaken,RemoteIPLatitude,RemoteIPLongitude,RemoteIPCountry\r\n| extend IPSubnet = split(cIP,\".\")\r\n| extend IPSubnet = strcat(IPSubnet[0],\".\",IPSubnet[1],\".xxx.xxx\")\r\n| summarize Count=dcount(cIP) by bin(TimeGenerated,15m)",
                          "size": 1,
                          "aggregation": 5,
                          "title": "Connection Count",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "gridSettings": {
                            "sortBy": [
                              {
                                "itemKey": "TimeGenerated",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "TimeGenerated",
                              "sortOrder": 2
                            }
                          ],
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 1 - Copy - Copy",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "W3CIISLog\r\n| where _ResourceId contains \"{CMGResourceGroup}\"| where cIP != \"::1\"\r\n| where csUriStem contains \"/SMS_MP/.sms_aut\"\r\n| project TimeGenerated,Computer,cIP,scStatus,scBytes,csBytes,TimeTaken,RemoteIPLatitude,RemoteIPLongitude,RemoteIPCountry\r\n| extend IPSubnet = split(cIP,\".\")\r\n| extend IPSubnet = strcat(IPSubnet[0],\".\",IPSubnet[1],\".xxx.xxx\")\r\n| summarize TimeMS=round(avg(TimeTaken),0) by bin(TimeGenerated,15m)",
                          "size": 1,
                          "aggregation": 5,
                          "title": "Request Processing Time",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "gridSettings": {
                            "sortBy": [
                              {
                                "itemKey": "TimeGenerated",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "TimeGenerated",
                              "sortOrder": 2
                            }
                          ],
                          "chartSettings": {
                            "showMetrics": false,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 1 - Copy - Copy - Copy",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "W3CIISLog\r\n| where _ResourceId contains \"{CMGResourceGroup}\"| extend StatusCode=substring(scStatus,0,1)\r\n| extend StatusCode = strcat(StatusCode,\"xx\")\r\n| summarize Count=count() by bin(TimeGenerated,15m),StatusCode",
                          "size": 1,
                          "title": "IIS Status Codes",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "showMetrics": false,
                            "showLegend": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4 - Copy - Copy - Copy - Copy - Copy",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "W3CIISLog\r\n| where _ResourceId contains \"{CMGResourceGroup}\"\r\n| where cIP != \"::1\"\r\n| where csUriStem contains \"/SMS_MP/.sms_aut\"\r\n| extend IP = split(cIP,\".\")\r\n| extend IP = strcat(IP[0],\".\",IP[1],\".xxx.xxx\")\r\n| summarize Count=count() by IP\r\n| order by Count desc",
                          "size": 1,
                          "title": "Connections by IP Subnet",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart",
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "IP",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "Count",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "group": "IP",
                            "createOtherGroup": 7,
                            "showMetrics": false,
                            "showLegend": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 7",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "name": "Client Connections (IIS Logs) Group",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "customWidth": "60",
            "name": "Right Column"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "CMG"
      },
      "name": "CMG Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "7c0209c9-c9af-4907-905f-7f393b8abe3d",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "label": "Time Range",
                  "type": 4,
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": {
                    "durationMs": 2592000000
                  }
                },
                {
                  "id": "464cd483-8622-40e0-9a19-e13fda9555de",
                  "version": "KqlParameterItem/1.0",
                  "name": "Computer",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| distinct Computer\r\n| order by Computer asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "182b0e23-9661-45b1-aa2e-b9995d926e88",
                  "version": "KqlParameterItem/1.0",
                  "name": "LogFile",
                  "label": "Log File",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName !contains \".lo_\"\r\n| where FileName !contains \"-2024\"\r\n| where FileName !contains \"-2025\"\r\n| distinct FileName\r\n| order by FileName asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where Computer in ({Computer}) and FileName in ({LogFile})\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| order by TimeGenerated desc",
              "size": 2,
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "26.8571ch"
                    }
                  },
                  {
                    "columnMatch": "Computer",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "17ch"
                    }
                  },
                  {
                    "columnMatch": "FileName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20.5714ch"
                    }
                  },
                  {
                    "columnMatch": "RawData",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "177.5714ch"
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true
              }
            },
            "name": "ConfigMgrLogs"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "ConfigMgrLogs"
      },
      "name": "ConfigMgr Logs Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "7c0209c9-c9af-4907-905f-7f393b8abe3d",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "label": "Time Range",
                  "type": 4,
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "464cd483-8622-40e0-9a19-e13fda9555de",
                  "version": "KqlParameterItem/1.0",
                  "name": "Computer",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "W3CIISLog\r\n| where _ResourceId contains \"{ConfigMgrResourceGroup}\" or _ResourceId contains \"{CMGResourceGroup}\"\r\n| distinct Computer\r\n| order by Computer asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "W3CIISLog\r\n| where Computer in ({Computer})\r\n| project TimeGenerated,Computer,sSiteName,sComputerName,sIP,csMethod,csUriStem,csUriQuery,sPort,csUserName,cIP,csVersion,csUserAgent,csCookie,csReferer,csHost,scStatus,scSubStatus,scWin32Status,scBytes,csBytes,TimeTaken,RemoteIPLatitude,RemoteIPLongitude,RemoteIPCountry\r\n| order by TimeGenerated desc",
              "size": 2,
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "26.8571ch"
                    }
                  },
                  {
                    "columnMatch": "Computer",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "17ch"
                    }
                  },
                  {
                    "columnMatch": "FileName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20.5714ch"
                    }
                  },
                  {
                    "columnMatch": "RawData",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "177.5714ch"
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true
              }
            },
            "name": "IISLogs"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "IISLogs"
      },
      "name": "IIS Logs Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| where FileName == \"SMS_CLOUD_PROXYCONNECTOR.log\"\r\n| where RawData contains \"ReportTrafficData - state message to send:\"\r\n| parse RawData with * 'ServerName=\"' ServerName '\"' * 'StartTime=\"' StartTime '\"' * 'EndTime=\"' EndTime '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * '<EndPoints>' EndPoints '</EndPoints>' *\r\n| extend EndPoints = split(EndPoints, '~~')\r\n| mv-expand EndPoints\r\n| parse EndPoints with * 'Name=\"' Endpoint '\"' * 'ProxyServer=\"' ProxyServer '\"' * 'TargetHost=\"' TargetHost '\"' * 'TotalRequests=\"' TotalRequests '\"' * 'TotalRequestsWithBearerToken=\"' TotalRequestsWithBearerToken '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * 'TotalRequestBytes=\"' TotalRequestBytes '\"' * 'TotalResponseBytes=\"' TotalResponseBytes '\"' * 'FailedRequests=\"' FailedRequests '\"' *\r\n| extend TotalRequests=toint(TotalRequests),TotalRequestsWithBearerToken=toint(TotalRequestsWithBearerToken), MaxConcurrentRequests=toint(MaxConcurrentRequests), TotalRequestBytes=toint(TotalRequestBytes), TotalResponseBytes=toint(TotalResponseBytes),FailedRequests=toint(FailedRequests)\r\n| project TimeGenerated, ServerName, StartTime, EndTime, Endpoint, ProxyServer, TargetHost, TotalRequests, TotalRequestsWithBearerToken, MaxConcurrentRequests, TotalRequestBytes, TotalResponseBytes, FailedRequests\r\n| where isnotempty(Endpoint)\r\n| extend Target_NB=tostring(split(TargetHost,\".\")[0])\r\n| extend TargetHost_Endpoint = strcat(Target_NB,\": \",Endpoint)\r\n| summarize TotalRequests = sum(TotalRequests), FailedRequests=sum(FailedRequests) by TimeGenerated,Target_NB\r\n| summarize arg_max(TimeGenerated,*) by Target_NB\r\n| project TimeGenerated,Target_NB,TotalRequests,FailedRequests\r\n| extend FailedRequestsThreshold = round(TotalRequests*0.2,0)\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend LastStatusUpdateMinutes = toint(TimeFromNow / 1m)\r\n| project Target_NB,LastStatusUpdateMinutes,TotalRequests,FailedRequests,FailedRequestsThreshold",
                    "size": 3,
                    "title": "CMG Requests Summary",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Target_NB",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "LastStatusUpdateMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "15",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "TotalRequests",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "4",
                                "text": "[\"TotalRequests\"] / [\"FailedRequests\"]"
                              },
                              {
                                "sourceColumn": "FailedRequests",
                                "operator": ">=",
                                "thresholdValue": "[\"FailedRequestsThreshold\"]",
                                "representation": "4",
                                "text": "[\"TotalRequests\"] / [\"FailedRequests\"]"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "[\"TotalRequests\"] / [\"FailedRequests\"]"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "FailedRequests",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "FailedRequestsThreshold",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Target_NB",
                          "label": "Connection Point"
                        },
                        {
                          "columnId": "LastStatusUpdateMinutes",
                          "label": "Last Status"
                        },
                        {
                          "columnId": "TotalRequests",
                          "label": "Total / Failed Requests"
                        }
                      ]
                    }
                  },
                  "name": "query - 11",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| where FileName == \"SMS_CLOUD_PROXYCONNECTOR.log\"\r\n| where RawData contains \"WebSocket connections established with proxy server\"\r\n//| summarize arg_max(TimeGenerated,*) by Computer\r\n| parse RawData with * 'There are ' WebSocketConnections ' WebSocket connections' * 'proxy server ' CMGName \":\" Port \"~~\" *\r\n| summarize arg_max(TimeGenerated,*) by Computer,CMGName,Port\r\n| extend CMGName = tostring(split(CMGName,\".\")[0])\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend LastStatusUpdateMinutes = toint(TimeFromNow / 1m)\r\n| project Computer,CMGName,Port,LastStatusUpdateMinutes,WebSocketConnections",
                    "size": 3,
                    "title": "Web Socket Connections to CMG",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Computer",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "16.7143ch"
                          }
                        },
                        {
                          "columnMatch": "CMGName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "16ch"
                          }
                        },
                        {
                          "columnMatch": "Port",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Lateral_Movement",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "11ch"
                          }
                        },
                        {
                          "columnMatch": "LastStatusUpdateMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "10",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "15.4286ch"
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "WebSocketConnections",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "10",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "16.8571ch"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Computer",
                          "label": "Server"
                        },
                        {
                          "columnId": "CMGName",
                          "label": "CMG"
                        },
                        {
                          "columnId": "Port",
                          "label": "Port"
                        },
                        {
                          "columnId": "LastStatusUpdateMinutes",
                          "label": "Last Status"
                        },
                        {
                          "columnId": "WebSocketConnections",
                          "label": "Connections"
                        }
                      ]
                    }
                  },
                  "name": "query - 12",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "NWConnectionMonitorTestResult \r\n| where SourceResourceId contains \"{ConfigMgrResourceGroup}\" or SourceResourceId contains \"{CMGResourceGroup}\"\r\n| summarize LastConnectionTest=arg_max(TimeGenerated,*) by SourceName, DestinationPort\r\n| extend SourceName = tostring(split(SourceName,\"(\")[0])\r\n| extend TimeFromNow = now() - LastConnectionTest\r\n| extend LastConnectionTestMinutes = toint(TimeFromNow / 1m)\r\n| extend Failed = strcat(ChecksFailed,\"/\",ChecksTotal)\r\n| project Source=SourceName,Port=DestinationPort,LastConnectionTestMinutes,Result=TestResult,ChecksFailed,Failed, MaxRTT=round(MaxRoundTripTimeMs,0),AvgRTT=round(AvgRoundTripTimeMs,0)\r\n| order by Source asc, Port asc\r\n",
                          "size": 3,
                          "title": "CMG Connection Tests",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Source",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "16.5714ch"
                                }
                              },
                              {
                                "columnMatch": "Port",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Lateral_Movement",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "10.7143ch"
                                }
                              },
                              {
                                "columnMatch": "LastConnectionTestMinutes",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": ">",
                                      "thresholdValue": "5",
                                      "representation": "4",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "12.8571ch"
                                },
                                "numberFormat": {
                                  "unit": 25,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "Result",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "!=",
                                      "thresholdValue": "Pass",
                                      "representation": "4",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "10.8571ch"
                                }
                              },
                              {
                                "columnMatch": "ChecksFailed",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Failed",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "sourceColumn": "ChecksFailed",
                                      "operator": ">",
                                      "thresholdValue": "2",
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "sourceColumn": "ChecksFailed",
                                      "operator": ">",
                                      "thresholdValue": "3",
                                      "representation": "4",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "16.7143ch"
                                }
                              },
                              {
                                "columnMatch": "MaxRTT",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "AvgRTT",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": ">",
                                      "thresholdValue": "100",
                                      "representation": "4",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "is Empty",
                                      "representation": "4",
                                      "text": "n/a"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "12.7143ch"
                                },
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "Source",
                                "label": "Source"
                              },
                              {
                                "columnId": "Port",
                                "label": "Port"
                              },
                              {
                                "columnId": "LastConnectionTestMinutes",
                                "label": "Last Test"
                              },
                              {
                                "columnId": "Result",
                                "label": "Result"
                              },
                              {
                                "columnId": "ChecksFailed",
                                "label": "ChecksFailed"
                              },
                              {
                                "columnId": "Failed",
                                "label": "Checks Failed"
                              },
                              {
                                "columnId": "MaxRTT",
                                "label": "Max RTT"
                              },
                              {
                                "columnId": "AvgRTT",
                                "label": "Avg RTT"
                              }
                            ]
                          }
                        },
                        "name": "query - 4",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "NWConnectionMonitorTestResult \r\n| where SourceResourceId contains \"{ConfigMgrResourceGroup}\" or SourceResourceId contains \"{CMGResourceGroup}\"\r\n//| where TimeGenerated > ago(1d)\r\n| summarize TotalChecks = sum(ChecksTotal), FailedChecks = sum(ChecksFailed), round(avgRTT=avg(AvgRoundTripTimeMs),0)\r\n| extend SuccessChecks = TotalChecks-FailedChecks\r\n| extend PercentFailedChecks = round((todouble(FailedChecks)/TotalChecks * 100),2)\r\n| extend PercentSuccessChecks = round((todouble(SuccessChecks)/TotalChecks * 100),2)\r\n| project TotalChecks, PercentSuccessChecks, PercentFailedChecks,avgRTT",
                                "size": 3,
                                "timeContextFromParameter": "TimeRange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "TotalChecks",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "15.8571ch"
                                      },
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "PercentSuccessChecks",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "green",
                                        "customColumnWidthSetting": "136px"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "PercentFailedChecks",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "red",
                                        "customColumnWidthSetting": "135px"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "avgRTT",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed",
                                        "customColumnWidthSetting": "146px"
                                      },
                                      "numberFormat": {
                                        "unit": 23,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "TotalChecks",
                                      "label": "Count"
                                    },
                                    {
                                      "columnId": "PercentSuccessChecks",
                                      "label": "Success"
                                    },
                                    {
                                      "columnId": "PercentFailedChecks",
                                      "label": "Failed"
                                    },
                                    {
                                      "columnId": "avgRTT",
                                      "label": "Average RTT"
                                    }
                                  ]
                                }
                              },
                              "name": "query - 5",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "NWConnectionMonitorTestResult \r\n| where SourceResourceId contains \"{ConfigMgrResourceGroup}\" or SourceResourceId contains \"{CMGResourceGroup}\"\r\n| summarize avgRTT = avg(AvgRoundTripTimeMs) by bin(TimeGenerated,1h)",
                                "size": 1,
                                "aggregation": 3,
                                "title": "Average Round-Trip Time",
                                "timeContextFromParameter": "TimeRange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "linechart",
                                "chartSettings": {
                                  "showMetrics": false,
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "avgRTT",
                                      "label": "Average RTT"
                                    },
                                    {
                                      "seriesName": "maxRTT",
                                      "label": "Max RTT"
                                    },
                                    {
                                      "seriesName": "minRTT",
                                      "label": "Min RTT"
                                    }
                                  ],
                                  "showDataPoints": true,
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 23,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                      }
                                    }
                                  }
                                }
                              },
                              "name": "query - 6",
                              "styleSettings": {
                                "showBorder": true
                              }
                            }
                          ]
                        },
                        "name": "ConnectionTest-24h"
                      }
                    ]
                  },
                  "name": "group - 1"
                }
              ]
            },
            "customWidth": "40",
            "name": "Left Column"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Connection Point Requests (SMS_Cloud_ProxyConnector.log)",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| where FileName == \"SMS_CLOUD_PROXYCONNECTOR.log\"\r\n| where RawData contains \"ReportTrafficData - state message to send:\"\r\n| parse RawData with * 'ServerName=\"' ServerName '\"' * 'StartTime=\"' StartTime '\"' * 'EndTime=\"' EndTime '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * '<EndPoints>' EndPoints '</EndPoints>' *\r\n| extend EndPoints = split(EndPoints, '~~')\r\n| mv-expand EndPoints\r\n| parse EndPoints with * 'Name=\"' Endpoint '\"' * 'ProxyServer=\"' ProxyServer '\"' * 'TargetHost=\"' TargetHost '\"' * 'TotalRequests=\"' TotalRequests '\"' * 'TotalRequestsWithBearerToken=\"' TotalRequestsWithBearerToken '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * 'TotalRequestBytes=\"' TotalRequestBytes '\"' * 'TotalResponseBytes=\"' TotalResponseBytes '\"' * 'FailedRequests=\"' FailedRequests '\"' *\r\n| extend TotalRequests=toint(TotalRequests),TotalRequestsWithBearerToken=toint(TotalRequestsWithBearerToken), MaxConcurrentRequests=toint(MaxConcurrentRequests), TotalRequestBytes=toint(TotalRequestBytes), TotalResponseBytes=toint(TotalResponseBytes),FailedRequests=toint(FailedRequests)\r\n| project TimeGenerated, ServerName, StartTime, EndTime, Endpoint, ProxyServer, TargetHost, TotalRequests, TotalRequestsWithBearerToken, MaxConcurrentRequests, TotalRequestBytes, TotalResponseBytes, FailedRequests\r\n| where isnotempty(Endpoint)\r\n| extend Target_NB=tostring(split(TargetHost,\".\")[0])\r\n| extend TargetHost_Endpoint = strcat(Target_NB,\": \",Endpoint)\r\n//| project TimeGenerated,TargetHost_Endpoint,TotalRequests,FailedRequests\r\n//| summarize TotalRequests = sum(TotalRequests) by TimeGenerated,Target_NB\r\n//| summarize TotalRequests = sum(TotalRequests) by bin(TimeGenerated,15m),Target_NB\r\n//| make-series TotalRequests = sum(TotalRequests) default=0 on TimeGenerated from ago(24h) to now() step 15m by Target_NB\r\n| make-series TotalRequests = sum(TotalRequests) default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 15m by Target_NB",
                          "size": 1,
                          "title": "Total Requests",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "showMetrics": false,
                            "showLegend": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| where FileName == \"SMS_CLOUD_PROXYCONNECTOR.log\"\r\n| where RawData contains \"ReportTrafficData - state message to send:\"\r\n| parse RawData with * 'ServerName=\"' ServerName '\"' * 'StartTime=\"' StartTime '\"' * 'EndTime=\"' EndTime '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * '<EndPoints>' EndPoints '</EndPoints>' *\r\n| extend EndPoints = split(EndPoints, '~~')\r\n| mv-expand EndPoints\r\n| parse EndPoints with * 'Name=\"' Endpoint '\"' * 'ProxyServer=\"' ProxyServer '\"' * 'TargetHost=\"' TargetHost '\"' * 'TotalRequests=\"' TotalRequests '\"' * 'TotalRequestsWithBearerToken=\"' TotalRequestsWithBearerToken '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * 'TotalRequestBytes=\"' TotalRequestBytes '\"' * 'TotalResponseBytes=\"' TotalResponseBytes '\"' * 'FailedRequests=\"' FailedRequests '\"' *\r\n| extend TotalRequests=toint(TotalRequests),TotalRequestsWithBearerToken=toint(TotalRequestsWithBearerToken), MaxConcurrentRequests=toint(MaxConcurrentRequests), TotalRequestBytes=toint(TotalRequestBytes), TotalResponseBytes=toint(TotalResponseBytes),FailedRequests=toint(FailedRequests)\r\n| project TimeGenerated, ServerName, StartTime, EndTime, Endpoint, ProxyServer, TargetHost, TotalRequests, TotalRequestsWithBearerToken, MaxConcurrentRequests, TotalRequestBytes, TotalResponseBytes, FailedRequests\r\n| where isnotempty(Endpoint)\r\n| extend Target_NB=tostring(split(TargetHost,\".\")[0])\r\n| extend TargetHost_Endpoint = strcat(Target_NB,\": \",Endpoint)\r\n//| project TimeGenerated,TargetHost_Endpoint,TotalRequests,FailedRequests\r\n//| summarize TotalRequests = sum(TotalRequests) by TimeGenerated,Target_NB\r\n//| make-series TotalRequests = sum(TotalRequests) default=0 {TimeRange:start} to {TimeRange:End} step 1m\r\n| make-series TotalRequests = max(MaxConcurrentRequests) default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 15m by Target_NB\r\n//| summarize TotalRequests = sum(TotalRequests) by bin(TimeGenerated,15m),Target_NB",
                          "size": 1,
                          "title": "Max Concurrent Requests",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "showMetrics": false,
                            "showLegend": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4 - Copy - Copy - Copy",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| where FileName == \"SMS_CLOUD_PROXYCONNECTOR.log\"\r\n| where RawData contains \"ReportTrafficData - state message to send:\"\r\n| parse RawData with * 'ServerName=\"' ServerName '\"' * 'StartTime=\"' StartTime '\"' * 'EndTime=\"' EndTime '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * '<EndPoints>' EndPoints '</EndPoints>' *\r\n| extend EndPoints = split(EndPoints, '~~')\r\n| mv-expand EndPoints\r\n| parse EndPoints with * 'Name=\"' Endpoint '\"' * 'ProxyServer=\"' ProxyServer '\"' * 'TargetHost=\"' TargetHost '\"' * 'TotalRequests=\"' TotalRequests '\"' * 'TotalRequestsWithBearerToken=\"' TotalRequestsWithBearerToken '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * 'TotalRequestBytes=\"' TotalRequestBytes '\"' * 'TotalResponseBytes=\"' TotalResponseBytes '\"' * 'FailedRequests=\"' FailedRequests '\"' *\r\n| extend TotalRequests=toint(TotalRequests),TotalRequestsWithBearerToken=toint(TotalRequestsWithBearerToken), MaxConcurrentRequests=toint(MaxConcurrentRequests), TotalRequestBytes=toint(TotalRequestBytes), TotalResponseBytes=toint(TotalResponseBytes),FailedRequests=toint(FailedRequests)\r\n| project TimeGenerated, ServerName, StartTime, EndTime, Endpoint, ProxyServer, TargetHost, TotalRequests, TotalRequestsWithBearerToken, MaxConcurrentRequests, TotalRequestBytes, TotalResponseBytes, FailedRequests\r\n| where isnotempty(Endpoint)\r\n| extend Target_NB=tostring(split(TargetHost,\".\")[0])\r\n| extend TargetHost_Endpoint = strcat(Target_NB,\": \",Endpoint)\r\n//| project TimeGenerated,TargetHost_Endpoint,TotalRequests,FailedRequests\r\n| summarize FailedRequests = sum(FailedRequests) by bin(TimeGenerated,15m),Target_NB",
                          "size": 1,
                          "title": "Failed Requests",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "showMetrics": false,
                            "showLegend": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4 - Copy",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| where FileName == \"SMS_CLOUD_PROXYCONNECTOR.log\"\r\n| where RawData contains \"ReportTrafficData - state message to send:\"\r\n| parse RawData with * 'ServerName=\"' ServerName '\"' * 'StartTime=\"' StartTime '\"' * 'EndTime=\"' EndTime '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * '<EndPoints>' EndPoints '</EndPoints>' *\r\n| extend EndPoints = split(EndPoints, '~~')\r\n| mv-expand EndPoints\r\n| parse EndPoints with * 'Name=\"' Endpoint '\"' * 'ProxyServer=\"' ProxyServer '\"' * 'TargetHost=\"' TargetHost '\"' * 'TotalRequests=\"' TotalRequests '\"' * 'TotalRequestsWithBearerToken=\"' TotalRequestsWithBearerToken '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * 'TotalRequestBytes=\"' TotalRequestBytes '\"' * 'TotalResponseBytes=\"' TotalResponseBytes '\"' * 'FailedRequests=\"' FailedRequests '\"' *\r\n| extend TotalRequests=toint(TotalRequests),TotalRequestsWithBearerToken=toint(TotalRequestsWithBearerToken), MaxConcurrentRequests=toint(MaxConcurrentRequests), TotalRequestBytes=toint(TotalRequestBytes), TotalResponseBytes=toint(TotalResponseBytes),FailedRequests=toint(FailedRequests)\r\n| project TimeGenerated, ServerName, StartTime, EndTime, Endpoint, ProxyServer, TargetHost, TotalRequests, TotalRequestsWithBearerToken, MaxConcurrentRequests, TotalRequestBytes, TotalResponseBytes, FailedRequests\r\n| where isnotempty(Endpoint)\r\n| extend Target_NB=tostring(split(TargetHost,\".\")[0])\r\n| extend TargetHost_Endpoint = strcat(Target_NB,\": \",Endpoint)\r\n| make-series TotalRequestBytes = sum(TotalRequestBytes),TotalResponseBytes=sum(TotalResponseBytes) default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 15m",
                          "size": 1,
                          "title": "Request / Response Size",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "showMetrics": false,
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "TotalRequestBytes",
                                "label": "Total Request Size"
                              },
                              {
                                "seriesName": "TotalResponseBytes",
                                "label": "Total Response Size"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 2,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4 - Copy - Copy - Copy - Copy",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| project TimeGenerated,Computer,FileName,RawData\r\n| where FileName == \"SMS_CLOUD_PROXYCONNECTOR.log\"\r\n| where RawData contains \"ReportTrafficData - state message to send:\"\r\n| parse RawData with * 'ServerName=\"' ServerName '\"' * 'StartTime=\"' StartTime '\"' * 'EndTime=\"' EndTime '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * '<EndPoints>' EndPoints '</EndPoints>' *\r\n| extend EndPoints = split(EndPoints, '~~')\r\n| mv-expand EndPoints\r\n| parse EndPoints with * 'Name=\"' Endpoint '\"' * 'ProxyServer=\"' ProxyServer '\"' * 'TargetHost=\"' TargetHost '\"' * 'TotalRequests=\"' TotalRequests '\"' * 'TotalRequestsWithBearerToken=\"' TotalRequestsWithBearerToken '\"' * 'MaxConcurrentRequests=\"' MaxConcurrentRequests '\"' * 'TotalRequestBytes=\"' TotalRequestBytes '\"' * 'TotalResponseBytes=\"' TotalResponseBytes '\"' * 'FailedRequests=\"' FailedRequests '\"' *\r\n| extend TotalRequests=toint(TotalRequests),TotalRequestsWithBearerToken=toint(TotalRequestsWithBearerToken), MaxConcurrentRequests=toint(MaxConcurrentRequests), TotalRequestBytes=toint(TotalRequestBytes), TotalResponseBytes=toint(TotalResponseBytes),FailedRequests=toint(FailedRequests)\r\n| project TimeGenerated, ServerName, StartTime, EndTime, Endpoint, ProxyServer, TargetHost, TotalRequests, TotalRequestsWithBearerToken, MaxConcurrentRequests, TotalRequestBytes, TotalResponseBytes, FailedRequests\r\n| where isnotempty(Endpoint)\r\n| extend Target_NB=tostring(split(TargetHost,\".\")[0])\r\n| extend TargetHost_Endpoint = strcat(Target_NB,\": \",Endpoint)\r\n//| project TimeGenerated,TargetHost_Endpoint,TotalRequests,FailedRequests\r\n//| summarize TotalRequests = sum(TotalRequests) by bin(TimeGenerated,15m),Endpoint\r\n| summarize TotalRequests = sum(TotalRequests) by Endpoint\r\n",
                          "size": 1,
                          "title": "Total Requests by Endpoint",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart"
                        },
                        "name": "query - 4 - Copy - Copy",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "name": "Connection Point Request Group",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "customWidth": "60",
            "name": "Right Column"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "CMGConnectionPoint"
      },
      "name": "CMG Connection Point Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//MP Checks\r\n//List of Management Points\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| summarize by Computer\r\n| join kind=leftouter(\r\n//MP Availability Check\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Successfully performed Management Point availability check against local computer\"\r\n| summarize LastMPAvailabilityCheckTime = max(TimeGenerated) by Computer\r\n| extend LastMPAvailabilityCheckMinutes = datetime_diff('minute', now(), LastMPAvailabilityCheckTime)\r\n) on Computer\r\n| join kind=leftouter(\r\n//User Service Availability Check\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Successfully performed User Service availability check against local computer\"\r\n| summarize LastUserServiceAvailabilityCheckTime = max(TimeGenerated) by Computer\r\n| extend LastUserServiceAvailabilityCheckMinutes = datetime_diff('minute', now(), LastUserServiceAvailabilityCheckTime)\r\n) on Computer\r\n| join kind=leftouter(\r\n//HTTP Send Request Sync\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Call to HttpSendRequestSync succeeded\"\r\n| summarize LastHTTPSendRequestSyncTime = max(TimeGenerated) by Computer\r\n| extend LastHTTPSendRequestSyncMinutes = datetime_diff('minute', now(), LastHTTPSendRequestSyncTime)\r\n) on Computer\r\n| join kind=leftouter(\r\n//HTTP Test Request\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Http test request succeeded\"\r\n| summarize LastHTTPTestRequestTime = max(TimeGenerated) by Computer\r\n| extend LastHTTPTestRequestMinutes = datetime_diff('minute', now(), LastHTTPTestRequestTime)\r\n) on Computer\r\n| join kind=leftouter(\r\n//Certificate Validation\r\nConfigMgr_Logs_CL\r\n| extend Computer=tostring(split(_ResourceId,\"/\")[8])\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| where RawData contains \"Completed validation of Certificate\"\r\n| summarize LastCertValidationTime = max(TimeGenerated) by Computer\r\n| extend LastCertValidationMinutes = datetime_diff('minute', now(), LastCertValidationTime)\r\n) on Computer\r\n| extend LastMPAvailabilityCheckMinutes = iif(isnull(LastMPAvailabilityCheckTime), -111, LastMPAvailabilityCheckMinutes)\r\n| extend LastUserServiceAvailabilityCheckMinutes = iif(isnull(LastUserServiceAvailabilityCheckTime), -111, LastUserServiceAvailabilityCheckMinutes)\r\n| extend LastHTTPSendRequestSyncMinutes = iif(isnull(LastHTTPSendRequestSyncTime), -111, LastHTTPSendRequestSyncMinutes)\r\n| extend LastHTTPTestRequestMinutes = iif(isnull(LastHTTPTestRequestTime), -111, LastHTTPTestRequestMinutes)\r\n| extend LastCertValidationMinutes = iif(isnull(LastCertValidationTime), -111, LastCertValidationMinutes)\r\n| project Computer,LastMPAvailabilityCheckMinutes,LastUserServiceAvailabilityCheckMinutes,LastHTTPSendRequestSyncMinutes,LastHTTPTestRequestMinutes,LastCertValidationMinutes\r\n",
                    "size": 3,
                    "title": "Management Point Checks (mpcontrol.log)",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Computer",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "22ch"
                          }
                        },
                        {
                          "columnMatch": "LastMPAvailabilityCheckMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "-111",
                                "representation": "4",
                                "text": "None"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "10",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "19.7143ch"
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "LastUserServiceAvailabilityCheckMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "-111",
                                "representation": "4",
                                "text": "None"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "10",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "26.5714ch"
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "LastHTTPSendRequestSyncMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "-111",
                                "representation": "4",
                                "text": "None"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "10",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "22.5714ch"
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "LastHTTPTestRequestMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "-111",
                                "representation": "4",
                                "text": "None"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "10",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "14.8571ch"
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "LastCertValidationMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "-111",
                                "representation": "4",
                                "text": "None"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "45",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "24ch"
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Computer",
                          "label": "Management Point"
                        },
                        {
                          "columnId": "LastMPAvailabilityCheckMinutes",
                          "label": "MP Availability"
                        },
                        {
                          "columnId": "LastUserServiceAvailabilityCheckMinutes",
                          "label": "User Service Availability"
                        },
                        {
                          "columnId": "LastHTTPSendRequestSyncMinutes",
                          "label": "HTTP Send Request"
                        },
                        {
                          "columnId": "LastHTTPTestRequestMinutes",
                          "label": "HTTP Test"
                        },
                        {
                          "columnId": "LastCertValidationMinutes",
                          "label": "Certificate Validation"
                        }
                      ]
                    }
                  },
                  "name": "query - 0",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//Management Points\r\nConfigMgr_Logs_CL\r\n| extend Computer=tolower(tostring(split(_ResourceId,\"/\")[8]))\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| distinct Computer\r\n| join kind = leftouter\r\n(\r\nConfigurationData\r\n| where Computer !contains \"test\"\r\n| where ConfigDataType == \"WindowsServices\"\r\n| where SvcDisplayName in\r\n(\r\n//MECM Services\r\n\"SMS Agent Host\",\r\n\"SMS_EXECUTIVE\",\r\n\"SMS_SITE_COMPONENT_MANAGER\",\r\n\"SMS_SITE_VSS_WRITER\",\r\n\"SQL Server VSS Writer\",\r\n\"Windows Management Instrumentation\",\r\n\"World Wide Web Publishing Service\",\r\n\"WSUS Service\"\r\n) or SvcDisplayName contains \"SMS_SITE_SQL_BACKUP\"\r\n| summarize arg_max(TimeGenerated,*) by Computer, _ResourceId,SvcDisplayName\r\n| extend Computer = tolower(Computer)\r\n| project TimeGenerated, Computer,SvcDisplayName,SvcName,SvcAccount,SvcStartupType,SvcState,_ResourceId\r\n) on Computer\r\n| extend LastStatusTimeMinutes = datetime_diff('minute', now(), TimeGenerated)\r\n| project Computer,SvcDisplayName,SvcState, LastStatusTimeMinutes\r\n| order by SvcDisplayName asc, Computer asc",
                    "size": 3,
                    "title": "Services",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Computer",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SvcDisplayName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SvcState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "Running",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "LastStatusTimeMinutes",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "1440",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 0
                            }
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "$gen_thresholds_SvcDisplayName_1",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Computer",
                          "label": "Management Point"
                        },
                        {
                          "columnId": "SvcDisplayName",
                          "label": "Service"
                        },
                        {
                          "columnId": "SvcState",
                          "label": "Service State"
                        },
                        {
                          "columnId": "LastStatusTimeMinutes",
                          "label": "Last Status"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_thresholds_SvcDisplayName_1",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "name": "query - 3 - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Perf\r\n| where _ResourceId contains \"{ConfigMgrResourceGroup}\" or _ResourceId =~ \"{CMGResourceGroup}\"\r\n| where ObjectName == \"SMS Notification Server\" and CounterName  == \"Total online clients\"\r\n| summarize CounterValue = round(avg(CounterValue),0) by bin(TimeGenerated,15m),Computer\r\n| project TimeGenerated,Computer,CounterValue",
                    "size": 0,
                    "aggregation": 5,
                    "title": "Online Clients",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "showLegend": true
                    }
                  },
                  "name": "query - 7 - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "customWidth": "55",
            "name": "MP Status Checks Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "IIS Status Codes (IIS Logs)",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "///ccm_system/request\r\nConfigMgr_Logs_CL\r\n| extend Computer=tolower(tostring(split(_ResourceId,\"/\")[8]))\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| distinct Computer\r\n| join kind = leftouter\r\n(\r\nW3CIISLog\r\n| extend Computer=tolower(tostring(split(_ResourceId,\"/\")[8]))\r\n| where csUriStem contains \"/ccm_system/request\"\r\n| extend Computer_Status = strcat(Computer,\" - \",scStatus)\r\n| summarize Count=count() by Computer_Status,bin(TimeGenerated,15m),Computer\r\n) on Computer\r\n| project TimeGenerated,Computer_Status,Count",
                    "size": 1,
                    "title": "ccm_system/request",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "showMetrics": false,
                      "showLegend": true
                    }
                  },
                  "name": "query - 0",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "///ccm_incoming\r\nConfigMgr_Logs_CL\r\n| extend Computer=tolower(tostring(split(_ResourceId,\"/\")[8]))\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| distinct Computer\r\n| join kind = leftouter\r\n(\r\nW3CIISLog\r\n| extend Computer=tolower(tostring(split(_ResourceId,\"/\")[8]))\r\n| where csUriStem contains \"ccm_incoming\"\r\n| extend Computer_Status = strcat(Computer,\" - \",scStatus)\r\n| summarize Count=count() by Computer_Status,bin(TimeGenerated,15m),Computer\r\n) on Computer\r\n| project TimeGenerated,Computer_Status,Count",
                    "size": 1,
                    "title": "ccm_incoming",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "showMetrics": false,
                      "showLegend": true
                    }
                  },
                  "name": "query - 0 - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "///SMS_MP/.sms_aut\r\nConfigMgr_Logs_CL\r\n| extend Computer=tolower(tostring(split(_ResourceId,\"/\")[8]))\r\n| extend FileName=tostring(split(FilePath,\"\\\\\")[-1])\r\n| where FileName == \"mpcontrol.log\"\r\n| distinct Computer\r\n| join kind = leftouter\r\n(\r\nW3CIISLog\r\n| extend Computer=tolower(tostring(split(_ResourceId,\"/\")[8]))\r\n| where csUriStem contains \"/SMS_MP/.sms_aut\"\r\n//| where csUriQuery contains \"MPLIST\" or csUriQuery contains \"MPCERT\" or csUriQuery contains \"MPKEYINFORMATION\"\r\n//| extend Computer_Status = strcat(Computer,\": \",csUriQuery,\" - \",scStatus)\r\n| extend Computer_Status = strcat(Computer,\" - \",scStatus)\r\n| summarize Count=count() by Computer_Status,bin(TimeGenerated,15m), Computer\r\n) on Computer\r\n| project TimeGenerated,Computer_Status,Count",
                    "size": 1,
                    "title": "SMS_MP/.sms_aut",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "showMetrics": false,
                      "showLegend": true
                    }
                  },
                  "name": "query - 0 - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "customWidth": "45",
            "name": "IIS Logs Group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "ManagementPoint"
      },
      "name": "Management Point Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AzureActivity\r\n| where ResourceGroup in (\"{ConfigMgrResourceGroup:label}\", \"{CMGResourceGroup:label}\")\r\n| summarize MostRecentTime=max(TimeGenerated),Count=count() by Resource=_ResourceId,ResourceType=ResourceProviderValue,Operation=OperationNameValue,CategoryValue,Level,Caller\r\n| project MostRecentTime,Resource,ResourceType,Operation,CategoryValue,Level,Caller, Count\r\n| order by MostRecentTime desc",
              "size": 2,
              "title": "Recent Activity",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Count",
                    "formatter": 4,
                    "formatOptions": {
                      "palette": "greenRed"
                    }
                  }
                ],
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "MostRecentTime",
                    "label": "Most Recent Time (UTC)"
                  },
                  {
                    "columnId": "Resource",
                    "label": "Resource"
                  },
                  {
                    "columnId": "ResourceType",
                    "label": "Resource Type"
                  },
                  {
                    "columnId": "Operation",
                    "label": "Operation"
                  },
                  {
                    "columnId": "CategoryValue",
                    "label": "Category"
                  },
                  {
                    "columnId": "Level",
                    "label": "Level"
                  },
                  {
                    "columnId": "Caller",
                    "label": "Caller"
                  },
                  {
                    "columnId": "Count",
                    "label": "Count"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "RecentActivity"
            },
            "name": "query - 5"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "RecentActivity"
      },
      "name": "Activity Logs Group"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}